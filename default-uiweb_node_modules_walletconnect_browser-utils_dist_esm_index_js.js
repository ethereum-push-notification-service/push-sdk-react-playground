"use strict";
(self["webpackChunk"] = self["webpackChunk"] || []).push([["default-uiweb_node_modules_walletconnect_browser-utils_dist_esm_index_js"],{

/***/ 99792:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "detectEnv": () => (/* binding */ detectEnv),
/* harmony export */   "detectOS": () => (/* binding */ detectOS),
/* harmony export */   "getClientMeta": () => (/* binding */ getClientMeta),
/* harmony export */   "getCrypto": () => (/* binding */ getCrypto),
/* harmony export */   "getCryptoOrThrow": () => (/* binding */ getCryptoOrThrow),
/* harmony export */   "getDocument": () => (/* binding */ getDocument),
/* harmony export */   "getDocumentOrThrow": () => (/* binding */ getDocumentOrThrow),
/* harmony export */   "getFromWindow": () => (/* binding */ getFromWindow),
/* harmony export */   "getFromWindowOrThrow": () => (/* binding */ getFromWindowOrThrow),
/* harmony export */   "getLocalStorage": () => (/* binding */ getLocalStorage),
/* harmony export */   "getLocalStorageOrThrow": () => (/* binding */ getLocalStorageOrThrow),
/* harmony export */   "getLocation": () => (/* binding */ getLocation),
/* harmony export */   "getLocationOrThrow": () => (/* binding */ getLocationOrThrow),
/* harmony export */   "getNavigator": () => (/* binding */ getNavigator),
/* harmony export */   "getNavigatorOrThrow": () => (/* binding */ getNavigatorOrThrow),
/* harmony export */   "isAndroid": () => (/* binding */ isAndroid),
/* harmony export */   "isBrowser": () => (/* binding */ isBrowser),
/* harmony export */   "isIOS": () => (/* binding */ isIOS),
/* harmony export */   "isMobile": () => (/* binding */ isMobile),
/* harmony export */   "isNode": () => (/* binding */ isNode)
/* harmony export */ });
/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76036);
/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(98053);
/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(66195);



function detectEnv(userAgent) {
    return (0,detect_browser__WEBPACK_IMPORTED_MODULE_2__.detect)(userAgent);
}
function detectOS() {
    const env = detectEnv();
    return env && env.os ? env.os : undefined;
}
function isAndroid() {
    const os = detectOS();
    return os ? os.toLowerCase().includes("android") : false;
}
function isIOS() {
    const os = detectOS();
    return os
        ? os.toLowerCase().includes("ios") ||
            (os.toLowerCase().includes("mac") && navigator.maxTouchPoints > 1)
        : false;
}
function isMobile() {
    const os = detectOS();
    return os ? isAndroid() || isIOS() : false;
}
function isNode() {
    const env = detectEnv();
    const result = env && env.name ? env.name.toLowerCase() === "node" : false;
    return result;
}
function isBrowser() {
    const result = !isNode() && !!getNavigator();
    return result;
}
const getFromWindow = _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getFromWindow;
const getFromWindowOrThrow = _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getFromWindowOrThrow;
const getDocumentOrThrow = _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocumentOrThrow;
const getDocument = _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument;
const getNavigatorOrThrow = _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigatorOrThrow;
const getNavigator = _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigator;
const getLocationOrThrow = _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocationOrThrow;
const getLocation = _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocation;
const getCryptoOrThrow = _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getCryptoOrThrow;
const getCrypto = _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getCrypto;
const getLocalStorageOrThrow = _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocalStorageOrThrow;
const getLocalStorage = _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocalStorage;
function getClientMeta() {
    return _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_0__.getWindowMetadata();
}
//# sourceMappingURL=browser.js.map

/***/ }),

/***/ 46171:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "detectEnv": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.detectEnv),
/* harmony export */   "detectOS": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.detectOS),
/* harmony export */   "formatIOSMobile": () => (/* reexport safe */ _mobile__WEBPACK_IMPORTED_MODULE_3__.formatIOSMobile),
/* harmony export */   "formatMobileRegistry": () => (/* reexport safe */ _registry__WEBPACK_IMPORTED_MODULE_4__.formatMobileRegistry),
/* harmony export */   "formatMobileRegistryEntry": () => (/* reexport safe */ _registry__WEBPACK_IMPORTED_MODULE_4__.formatMobileRegistryEntry),
/* harmony export */   "getClientMeta": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.getClientMeta),
/* harmony export */   "getCrypto": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.getCrypto),
/* harmony export */   "getCryptoOrThrow": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.getCryptoOrThrow),
/* harmony export */   "getDappRegistryUrl": () => (/* reexport safe */ _registry__WEBPACK_IMPORTED_MODULE_4__.getDappRegistryUrl),
/* harmony export */   "getDocument": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.getDocument),
/* harmony export */   "getDocumentOrThrow": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.getDocumentOrThrow),
/* harmony export */   "getFromWindow": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.getFromWindow),
/* harmony export */   "getFromWindowOrThrow": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.getFromWindowOrThrow),
/* harmony export */   "getLocal": () => (/* reexport safe */ _local__WEBPACK_IMPORTED_MODULE_2__.getLocal),
/* harmony export */   "getLocalStorage": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.getLocalStorage),
/* harmony export */   "getLocalStorageOrThrow": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.getLocalStorageOrThrow),
/* harmony export */   "getLocation": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.getLocation),
/* harmony export */   "getLocationOrThrow": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.getLocationOrThrow),
/* harmony export */   "getMobileLinkRegistry": () => (/* reexport safe */ _mobile__WEBPACK_IMPORTED_MODULE_3__.getMobileLinkRegistry),
/* harmony export */   "getMobileRegistryEntry": () => (/* reexport safe */ _mobile__WEBPACK_IMPORTED_MODULE_3__.getMobileRegistryEntry),
/* harmony export */   "getNavigator": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.getNavigator),
/* harmony export */   "getNavigatorOrThrow": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.getNavigatorOrThrow),
/* harmony export */   "getWalletRegistryUrl": () => (/* reexport safe */ _registry__WEBPACK_IMPORTED_MODULE_4__.getWalletRegistryUrl),
/* harmony export */   "isAndroid": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.isAndroid),
/* harmony export */   "isBrowser": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.isBrowser),
/* harmony export */   "isIOS": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.isIOS),
/* harmony export */   "isMobile": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.isMobile),
/* harmony export */   "isNode": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_0__.isNode),
/* harmony export */   "mobileLinkChoiceKey": () => (/* reexport safe */ _mobile__WEBPACK_IMPORTED_MODULE_3__.mobileLinkChoiceKey),
/* harmony export */   "removeLocal": () => (/* reexport safe */ _local__WEBPACK_IMPORTED_MODULE_2__.removeLocal),
/* harmony export */   "safeJsonParse": () => (/* reexport safe */ _json__WEBPACK_IMPORTED_MODULE_1__.safeJsonParse),
/* harmony export */   "safeJsonStringify": () => (/* reexport safe */ _json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify),
/* harmony export */   "saveMobileLinkInfo": () => (/* reexport safe */ _mobile__WEBPACK_IMPORTED_MODULE_3__.saveMobileLinkInfo),
/* harmony export */   "setLocal": () => (/* reexport safe */ _local__WEBPACK_IMPORTED_MODULE_2__.setLocal)
/* harmony export */ });
/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(99792);
/* harmony import */ var _json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(98334);
/* harmony import */ var _local__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(64550);
/* harmony import */ var _mobile__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(61125);
/* harmony import */ var _registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(77193);





//# sourceMappingURL=index.js.map

/***/ }),

/***/ 98334:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "safeJsonParse": () => (/* binding */ safeJsonParse),
/* harmony export */   "safeJsonStringify": () => (/* binding */ safeJsonStringify)
/* harmony export */ });
/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12737);

const safeJsonParse = _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonParse;
const safeJsonStringify = _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonStringify;
//# sourceMappingURL=json.js.map

/***/ }),

/***/ 64550:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getLocal": () => (/* binding */ getLocal),
/* harmony export */   "removeLocal": () => (/* binding */ removeLocal),
/* harmony export */   "setLocal": () => (/* binding */ setLocal)
/* harmony export */ });
/* harmony import */ var _json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(98334);
/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(99792);


function setLocal(key, data) {
    const raw = (0,_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonStringify)(data);
    const local = (0,_browser__WEBPACK_IMPORTED_MODULE_1__.getLocalStorage)();
    if (local) {
        local.setItem(key, raw);
    }
}
function getLocal(key) {
    let data = null;
    let raw = null;
    const local = (0,_browser__WEBPACK_IMPORTED_MODULE_1__.getLocalStorage)();
    if (local) {
        raw = local.getItem(key);
    }
    data = raw ? (0,_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonParse)(raw) : raw;
    return data;
}
function removeLocal(key) {
    const local = (0,_browser__WEBPACK_IMPORTED_MODULE_1__.getLocalStorage)();
    if (local) {
        local.removeItem(key);
    }
}
//# sourceMappingURL=local.js.map

/***/ }),

/***/ 61125:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "formatIOSMobile": () => (/* binding */ formatIOSMobile),
/* harmony export */   "getMobileLinkRegistry": () => (/* binding */ getMobileLinkRegistry),
/* harmony export */   "getMobileRegistryEntry": () => (/* binding */ getMobileRegistryEntry),
/* harmony export */   "mobileLinkChoiceKey": () => (/* binding */ mobileLinkChoiceKey),
/* harmony export */   "saveMobileLinkInfo": () => (/* binding */ saveMobileLinkInfo)
/* harmony export */ });
/* harmony import */ var _local__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64550);

const mobileLinkChoiceKey = "WALLETCONNECT_DEEPLINK_CHOICE";
function formatIOSMobile(uri, entry) {
    const encodedUri = encodeURIComponent(uri);
    return entry.universalLink
        ? `${entry.universalLink}/wc?uri=${encodedUri}`
        : entry.deepLink
            ? `${entry.deepLink}${entry.deepLink.endsWith(":") ? "//" : "/"}wc?uri=${encodedUri}`
            : "";
}
function saveMobileLinkInfo(data) {
    const focusUri = data.href.split("?")[0];
    (0,_local__WEBPACK_IMPORTED_MODULE_0__.setLocal)(mobileLinkChoiceKey, Object.assign(Object.assign({}, data), { href: focusUri }));
}
function getMobileRegistryEntry(registry, name) {
    return registry.filter((entry) => entry.name.toLowerCase().includes(name.toLowerCase()))[0];
}
function getMobileLinkRegistry(registry, whitelist) {
    let links = registry;
    if (whitelist) {
        links = whitelist.map((name) => getMobileRegistryEntry(registry, name)).filter(Boolean);
    }
    return links;
}
//# sourceMappingURL=mobile.js.map

/***/ }),

/***/ 77193:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "formatMobileRegistry": () => (/* binding */ formatMobileRegistry),
/* harmony export */   "formatMobileRegistryEntry": () => (/* binding */ formatMobileRegistryEntry),
/* harmony export */   "getDappRegistryUrl": () => (/* binding */ getDappRegistryUrl),
/* harmony export */   "getWalletRegistryUrl": () => (/* binding */ getWalletRegistryUrl)
/* harmony export */ });
const API_URL = "https://registry.walletconnect.com";
function getWalletRegistryUrl() {
    return API_URL + "/api/v2/wallets";
}
function getDappRegistryUrl() {
    return API_URL + "/api/v2/dapps";
}
function formatMobileRegistryEntry(entry, platform = "mobile") {
    var _a;
    return {
        name: entry.name || "",
        shortName: entry.metadata.shortName || "",
        color: entry.metadata.colors.primary || "",
        logo: (_a = entry.image_url.sm) !== null && _a !== void 0 ? _a : "",
        universalLink: entry[platform].universal || "",
        deepLink: entry[platform].native || "",
    };
}
function formatMobileRegistry(registry, platform = "mobile") {
    return Object.values(registry)
        .filter(entry => !!entry[platform].universal || !!entry[platform].native)
        .map((entry) => formatMobileRegistryEntry(entry, platform));
}
//# sourceMappingURL=registry.js.map

/***/ }),

/***/ 12737:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "safeJsonParse": () => (/* binding */ safeJsonParse),
/* harmony export */   "safeJsonStringify": () => (/* binding */ safeJsonStringify)
/* harmony export */ });
function safeJsonParse(value) {
    if (typeof value !== "string") {
        throw new Error(`Cannot safe json parse value of type ${typeof value}`);
    }
    try {
        return JSON.parse(value);
    }
    catch (_a) {
        return value;
    }
}
function safeJsonStringify(value) {
    return typeof value === "string" ? value : JSON.stringify(value);
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 98053:
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
function getFromWindow(name) {
    let res = undefined;
    if (typeof window !== "undefined" && typeof window[name] !== "undefined") {
        res = window[name];
    }
    return res;
}
exports.getFromWindow = getFromWindow;
function getFromWindowOrThrow(name) {
    const res = getFromWindow(name);
    if (!res) {
        throw new Error(`${name} is not defined in Window`);
    }
    return res;
}
exports.getFromWindowOrThrow = getFromWindowOrThrow;
function getDocumentOrThrow() {
    return getFromWindowOrThrow("document");
}
exports.getDocumentOrThrow = getDocumentOrThrow;
function getDocument() {
    return getFromWindow("document");
}
exports.getDocument = getDocument;
function getNavigatorOrThrow() {
    return getFromWindowOrThrow("navigator");
}
exports.getNavigatorOrThrow = getNavigatorOrThrow;
function getNavigator() {
    return getFromWindow("navigator");
}
exports.getNavigator = getNavigator;
function getLocationOrThrow() {
    return getFromWindowOrThrow("location");
}
exports.getLocationOrThrow = getLocationOrThrow;
function getLocation() {
    return getFromWindow("location");
}
exports.getLocation = getLocation;
function getCryptoOrThrow() {
    return getFromWindowOrThrow("crypto");
}
exports.getCryptoOrThrow = getCryptoOrThrow;
function getCrypto() {
    return getFromWindow("crypto");
}
exports.getCrypto = getCrypto;
function getLocalStorageOrThrow() {
    return getFromWindowOrThrow("localStorage");
}
exports.getLocalStorageOrThrow = getLocalStorageOrThrow;
function getLocalStorage() {
    return getFromWindow("localStorage");
}
exports.getLocalStorage = getLocalStorage;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 76036:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getWindowMetadata = void 0;
const window_getters_1 = __webpack_require__(69589);
function getWindowMetadata() {
    let doc;
    let loc;
    try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
    }
    catch (e) {
        return null;
    }
    function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons = [];
        for (let i = 0; i < links.length; i++) {
            const link = links[i];
            const rel = link.getAttribute("rel");
            if (rel) {
                if (rel.toLowerCase().indexOf("icon") > -1) {
                    const href = link.getAttribute("href");
                    if (href) {
                        if (href.toLowerCase().indexOf("https:") === -1 &&
                            href.toLowerCase().indexOf("http:") === -1 &&
                            href.indexOf("//") !== 0) {
                            let absoluteHref = loc.protocol + "//" + loc.host;
                            if (href.indexOf("/") === 0) {
                                absoluteHref += href;
                            }
                            else {
                                const path = loc.pathname.split("/");
                                path.pop();
                                const finalPath = path.join("/");
                                absoluteHref += finalPath + "/" + href;
                            }
                            icons.push(absoluteHref);
                        }
                        else if (href.indexOf("//") === 0) {
                            const absoluteUrl = loc.protocol + href;
                            icons.push(absoluteUrl);
                        }
                        else {
                            icons.push(href);
                        }
                    }
                }
            }
        }
        return icons;
    }
    function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i = 0; i < metaTags.length; i++) {
            const tag = metaTags[i];
            const attributes = ["itemprop", "property", "name"]
                .map((target) => tag.getAttribute(target))
                .filter((attr) => {
                if (attr) {
                    return args.includes(attr);
                }
                return false;
            });
            if (attributes.length && attributes) {
                const content = tag.getAttribute("content");
                if (content) {
                    return content;
                }
            }
        }
        return "";
    }
    function getName() {
        let name = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name) {
            name = doc.title;
        }
        return name;
    }
    function getDescription() {
        const description = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description;
    }
    const name = getName();
    const description = getDescription();
    const url = loc.origin;
    const icons = getIcons();
    const meta = {
        description,
        url,
        icons,
        name,
    };
    return meta;
}
exports.getWindowMetadata = getWindowMetadata;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 66195:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BotInfo": () => (/* binding */ BotInfo),
/* harmony export */   "BrowserInfo": () => (/* binding */ BrowserInfo),
/* harmony export */   "NodeInfo": () => (/* binding */ NodeInfo),
/* harmony export */   "ReactNativeInfo": () => (/* binding */ ReactNativeInfo),
/* harmony export */   "SearchBotDeviceInfo": () => (/* binding */ SearchBotDeviceInfo),
/* harmony export */   "browserName": () => (/* binding */ browserName),
/* harmony export */   "detect": () => (/* binding */ detect),
/* harmony export */   "detectOS": () => (/* binding */ detectOS),
/* harmony export */   "getNodeVersion": () => (/* binding */ getNodeVersion),
/* harmony export */   "parseUserAgent": () => (/* binding */ parseUserAgent)
/* harmony export */ });
/* provided dependency */ var process = __webpack_require__(13158);
var __spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var BrowserInfo = /** @class */ (function () {
    function BrowserInfo(name, version, os) {
        this.name = name;
        this.version = version;
        this.os = os;
        this.type = 'browser';
    }
    return BrowserInfo;
}());

var NodeInfo = /** @class */ (function () {
    function NodeInfo(version) {
        this.version = version;
        this.type = 'node';
        this.name = 'node';
        this.os = process.platform;
    }
    return NodeInfo;
}());

var SearchBotDeviceInfo = /** @class */ (function () {
    function SearchBotDeviceInfo(name, version, os, bot) {
        this.name = name;
        this.version = version;
        this.os = os;
        this.bot = bot;
        this.type = 'bot-device';
    }
    return SearchBotDeviceInfo;
}());

var BotInfo = /** @class */ (function () {
    function BotInfo() {
        this.type = 'bot';
        this.bot = true; // NOTE: deprecated test name instead
        this.name = 'bot';
        this.version = null;
        this.os = null;
    }
    return BotInfo;
}());

var ReactNativeInfo = /** @class */ (function () {
    function ReactNativeInfo() {
        this.type = 'react-native';
        this.name = 'react-native';
        this.version = null;
        this.os = null;
    }
    return ReactNativeInfo;
}());

// tslint:disable-next-line:max-line-length
var SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
var SEARCHBOT_OS_REGEX = /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
var REQUIRED_VERSION_PARTS = 3;
var userAgentRules = [
    ['aol', /AOLShield\/([0-9\._]+)/],
    ['edge', /Edge\/([0-9\._]+)/],
    ['edge-ios', /EdgiOS\/([0-9\._]+)/],
    ['yandexbrowser', /YaBrowser\/([0-9\._]+)/],
    ['kakaotalk', /KAKAOTALK\s([0-9\.]+)/],
    ['samsung', /SamsungBrowser\/([0-9\.]+)/],
    ['silk', /\bSilk\/([0-9._-]+)\b/],
    ['miui', /MiuiBrowser\/([0-9\.]+)$/],
    ['beaker', /BeakerBrowser\/([0-9\.]+)/],
    ['edge-chromium', /EdgA?\/([0-9\.]+)/],
    [
        'chromium-webview',
        /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/,
    ],
    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
    ['phantomjs', /PhantomJS\/([0-9\.]+)(:?\s|$)/],
    ['crios', /CriOS\/([0-9\.]+)(:?\s|$)/],
    ['firefox', /Firefox\/([0-9\.]+)(?:\s|$)/],
    ['fxios', /FxiOS\/([0-9\.]+)/],
    ['opera-mini', /Opera Mini.*Version\/([0-9\.]+)/],
    ['opera', /Opera\/([0-9\.]+)(?:\s|$)/],
    ['opera', /OPR\/([0-9\.]+)(:?\s|$)/],
    ['ie', /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
    ['ie', /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
    ['ie', /MSIE\s(7\.0)/],
    ['bb10', /BB10;\sTouch.*Version\/([0-9\.]+)/],
    ['android', /Android\s([0-9\.]+)/],
    ['ios', /Version\/([0-9\._]+).*Mobile.*Safari.*/],
    ['safari', /Version\/([0-9\._]+).*Safari/],
    ['facebook', /FBAV\/([0-9\.]+)/],
    ['instagram', /Instagram\s([0-9\.]+)/],
    ['ios-webview', /AppleWebKit\/([0-9\.]+).*Mobile/],
    ['ios-webview', /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
    ['searchbot', SEARCHBOX_UA_REGEX],
];
var operatingSystemRules = [
    ['iOS', /iP(hone|od|ad)/],
    ['Android OS', /Android/],
    ['BlackBerry OS', /BlackBerry|BB10/],
    ['Windows Mobile', /IEMobile/],
    ['Amazon OS', /Kindle/],
    ['Windows 3.11', /Win16/],
    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],
    ['Windows 98', /(Windows 98)|(Win98)/],
    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],
    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],
    ['Windows Server 2003', /(Windows NT 5.2)/],
    ['Windows Vista', /(Windows NT 6.0)/],
    ['Windows 7', /(Windows NT 6.1)/],
    ['Windows 8', /(Windows NT 6.2)/],
    ['Windows 8.1', /(Windows NT 6.3)/],
    ['Windows 10', /(Windows NT 10.0)/],
    ['Windows ME', /Windows ME/],
    ['Open BSD', /OpenBSD/],
    ['Sun OS', /SunOS/],
    ['Chrome OS', /CrOS/],
    ['Linux', /(Linux)|(X11)/],
    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],
    ['QNX', /QNX/],
    ['BeOS', /BeOS/],
    ['OS/2', /OS\/2/],
];
function detect(userAgent) {
    if (!!userAgent) {
        return parseUserAgent(userAgent);
    }
    if (typeof document === 'undefined' &&
        typeof navigator !== 'undefined' &&
        navigator.product === 'ReactNative') {
        return new ReactNativeInfo();
    }
    if (typeof navigator !== 'undefined') {
        return parseUserAgent(navigator.userAgent);
    }
    return getNodeVersion();
}
function matchUserAgent(ua) {
    // opted for using reduce here rather than Array#first with a regex.test call
    // this is primarily because using the reduce we only perform the regex
    // execution once rather than once for the test and for the exec again below
    // probably something that needs to be benchmarked though
    return (ua !== '' &&
        userAgentRules.reduce(function (matched, _a) {
            var browser = _a[0], regex = _a[1];
            if (matched) {
                return matched;
            }
            var uaMatch = regex.exec(ua);
            return !!uaMatch && [browser, uaMatch];
        }, false));
}
function browserName(ua) {
    var data = matchUserAgent(ua);
    return data ? data[0] : null;
}
function parseUserAgent(ua) {
    var matchedRule = matchUserAgent(ua);
    if (!matchedRule) {
        return null;
    }
    var name = matchedRule[0], match = matchedRule[1];
    if (name === 'searchbot') {
        return new BotInfo();
    }
    var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);
    if (versionParts) {
        if (versionParts.length < REQUIRED_VERSION_PARTS) {
            versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));
        }
    }
    else {
        versionParts = [];
    }
    var version = versionParts.join('.');
    var os = detectOS(ua);
    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);
    if (searchBotMatch && searchBotMatch[1]) {
        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);
    }
    return new BrowserInfo(name, version, os);
}
function detectOS(ua) {
    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {
        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];
        var match = regex.exec(ua);
        if (match) {
            return os;
        }
    }
    return null;
}
function getNodeVersion() {
    var isNode = typeof process !== 'undefined' && process.version;
    return isNode ? new NodeInfo(process.version.slice(1)) : null;
}
function createVersionParts(count) {
    var output = [];
    for (var ii = 0; ii < count; ii++) {
        output.push('0');
    }
    return output;
}


/***/ })

}]);
//# sourceMappingURL=default-uiweb_node_modules_walletconnect_browser-utils_dist_esm_index_js.js.map