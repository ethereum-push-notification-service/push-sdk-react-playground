{"version":3,"file":"vendors-uiweb_node_modules_web3-onboard_core_dist_Index-000015c1_js.js","mappings":"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,qDAAa;AAChB;AACA,GAAG;AACH;AACA,GAAG,qDAAc;AACjB;AACA,GAAG;AACH;AACA,kBAAkB,qDAAM;AACxB;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA;;AAEA;AACA;AACA,SAAS,qDAAO;AAChB,GAAG,qDAAI;AACP,GAAG;AACH;AACA,GAAG,qDAAM;AACT,GAAG;AACH;AACA,kBAAkB,qDAAM;AACxB;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,SAAS,qDAAO;AAChB,GAAG,qDAAgB;AACnB,GAAG,qDAAI;AACP,GAAG;AACH;AACA,GAAG,qDAAM;AACT,GAAG,qDAAe;AAClB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG,qDAAa;AAChB;AACA,GAAG;AACH;AACA,GAAG,qDAAc;AACjB;AACA,GAAG;AACH;AACA,kBAAkB,qDAAM;AACxB,GAAG,qDAAiB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,qDAAK;AAC1B,GAAG;AACH;AACA;AACA,GAAG,qDAAM;AACT;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,MAAM,qDAAa;AACnB;AACA,MAAM;AACN;AACA;AACA,KAAK,qDAAa;AAClB;AACA;AACA,KAAK;AACL,IAAI,qDAAY;;AAEhB,IAAI,qDAAc;AAClB;AACA,KAAK;;AAEL,IAAI,qDAAY;AAChB;AACA,GAAG;AACH;AACA;AACA,GAAG,qDAAa;AAChB;AACA,GAAG;AACH;AACA,GAAG,qDAAc;AACjB;AACA,GAAG;AACH;AACA;AACA,kBAAkB,qDAAM;AACxB;AACA;AACA;;AAEA;AACA,OAAO,cAAc,kDAAsB,GAAG;AAC9C,OAAO,eAAe;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8BAA8B,iDAAe;AAC7C;AACA;AACA,EAAE,qDAAI,+CAA+C,iDAAc,IAAI,iCAA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qDAAmB;AACvB;AACA;;AAEA,gBAAgB,qDAAoB,KAAK,kDAAG;AAC5C;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA,KAAK;AACL;;AAEA;AACA,GAAG;AACH;AACA,GAAG,qDAAc;AACjB;AACA,cAAc,sDAAqB,KAAK,iDAAI,IAAI,uBAAuB,kDAAQ,EAAE;AACjF;AACA,GAAG;AACH;AACA,kBAAkB,qDAAM;AACxB,GAAG,qDAAiB;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,qDAAK;AAC1B,GAAG;AACH;AACA;AACA,GAAG,qDAAM;AACT;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,MAAM,qDAAa;AACnB;AACA,MAAM;AACN;AACA;AACA,KAAK,qDAAa;AAClB;AACA;AACA,KAAK;AACL,IAAI,qDAAY;;AAEhB,IAAI,qDAAc;AAClB;AACA,KAAK;;AAEL,IAAI,qDAAY;AAChB;AACA,GAAG;AACH;AACA;AACA,GAAG,qDAAa;AAChB;AACA,GAAG;AACH;AACA,GAAG,qDAAc;AACjB;AACA,GAAG;AACH;AACA;AACA,kBAAkB,qDAAM;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS,SAAS,EAAE,kDAAa;AACjC,wBAAwB,yDAAY,uBAAuB,0DAAS,CAAC,sDAAS,mBAAmB,4DAAW;AAC5G,CAAC,qDAAmB;AACpB,OAAO,WAAW;AAClB,OAAO,kBAAkB;AACzB,OAAO,gBAAgB;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,EAAE,uDAAW;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,iDAAe;AACnC;AACA;;AAEA,EAAE,qDAAI;AACN;AACA;AACA;AACA;AACA,GAAG,iDAAc;AACjB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAE4B","sources":["webpack:///../../uiweb/node_modules/@web3-onboard/core/dist/Index-000015c1.js"],"sourcesContent":["import { Z as is_function, an as cubicOut, S as SvelteComponent, i as init, s as safe_not_equal, a as append_styles, j as element, k as attr, b as insert, n as noop, d as detach, e as empty, x as transition_in, y as group_outros, A as transition_out, z as check_outros, ao as defaultNotifyEventStyles, G as space, l as null_to_empty, m as append, F as create_component, I as mount_component, K as destroy_component, a6 as unrecognizedChainStyle, c as component_subscribe, al as onDestroy, t as text, v as set_data, E as shortenAddress, ap as networkToChainId, a3 as state, aq as gweiToWeiHex, ar as toHexString, af as configuration, as as chainStyles, H as toggle_class, p as listen, J as stop_propagation, L as run_all, w as wallets$, at as transactions$, au as removeNotification, av as removeTransaction, aw as addCustomNotification, u as update_keyed_each, ax as fix_position, ay as add_transform, az as create_animation, U as add_render_callback, V as create_in_transition, ab as fly, ak as create_out_transition, ai as bubble, aA as fix_and_outro_and_destroy_block, X as fade } from './index-55186ee6.js';\nimport { _, locale } from 'svelte-i18n';\nimport { startWith, shareReplay } from 'rxjs/operators';\nimport { BigNumber } from 'ethers';\nimport 'rxjs';\nimport 'bowser';\nimport 'nanoid';\nimport 'joi';\nimport '@web3-onboard/common';\nimport 'bignumber.js';\nimport 'svelte/store';\nimport 'lodash.partition';\nimport 'lodash.merge';\nimport 'eventemitter3';\n\nfunction flip(node, { from, to }, params = {}) {\n    const style = getComputedStyle(node);\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);\n    const dx = (from.left + from.width * ox / to.width) - (to.left + ox);\n    const dy = (from.top + from.height * oy / to.height) - (to.top + oy);\n    const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;\n    return {\n        delay,\n        duration: is_function(duration) ? duration(Math.sqrt(dx * dx + dy * dy)) : duration,\n        easing,\n        css: (t, u) => {\n            const x = u * dx;\n            const y = u * dy;\n            const sx = t + u * from.width / to.width;\n            const sy = t + u * from.height / to.height;\n            return `transform: ${transform} translate(${x}px, ${y}px) scale(${sx}, ${sy});`;\n        }\n    };\n}\n\n/* src/views/notify/ChainBadge.svelte generated by Svelte v3.59.2 */\n\nfunction add_css$5(target) {\n\tappend_styles(target, \"svelte-13cuwwo\", \"div.svelte-13cuwwo{box-sizing:content-box}.border.svelte-13cuwwo{border:2px solid;border-radius:120px;overflow:hidden}\");\n}\n\nfunction create_fragment$5(ctx) {\n\tlet div;\n\tlet div_style_value;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tattr(div, \"class\", \"border svelte-13cuwwo\");\n\n\t\t\tattr(div, \"style\", div_style_value = `\n    width: ${/*size*/ ctx[2] - /*padding*/ ctx[3] * 2}px; \n    height: ${/*size*/ ctx[2] - /*padding*/ ctx[3] * 2}px; \n    border-color: var(${/*borderColorVar*/ ctx[1]}); \n    padding: ${/*padding*/ ctx[3]}px; \n    background-color: ${/*background*/ ctx[4]};\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n  `);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tdiv.innerHTML = /*icon*/ ctx[0];\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*icon*/ 1) div.innerHTML = /*icon*/ ctx[0];\n\t\t\tif (dirty & /*size, padding, borderColorVar, background*/ 30 && div_style_value !== (div_style_value = `\n    width: ${/*size*/ ctx[2] - /*padding*/ ctx[3] * 2}px; \n    height: ${/*size*/ ctx[2] - /*padding*/ ctx[3] * 2}px; \n    border-color: var(${/*borderColorVar*/ ctx[1]}); \n    padding: ${/*padding*/ ctx[3]}px; \n    background-color: ${/*background*/ ctx[4]};\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n  `)) {\n\t\t\t\tattr(div, \"style\", div_style_value);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t}\n\t};\n}\n\nfunction instance$5($$self, $$props, $$invalidate) {\n\tlet { icon } = $$props;\n\tlet { borderColorVar } = $$props;\n\tlet { size } = $$props;\n\tlet { padding = 0 } = $$props;\n\tlet { background = 'transparent' } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('icon' in $$props) $$invalidate(0, icon = $$props.icon);\n\t\tif ('borderColorVar' in $$props) $$invalidate(1, borderColorVar = $$props.borderColorVar);\n\t\tif ('size' in $$props) $$invalidate(2, size = $$props.size);\n\t\tif ('padding' in $$props) $$invalidate(3, padding = $$props.padding);\n\t\tif ('background' in $$props) $$invalidate(4, background = $$props.background);\n\t};\n\n\treturn [icon, borderColorVar, size, padding, background];\n}\n\nclass ChainBadge extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$5,\n\t\t\tcreate_fragment$5,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\ticon: 0,\n\t\t\t\tborderColorVar: 1,\n\t\t\t\tsize: 2,\n\t\t\t\tpadding: 3,\n\t\t\t\tbackground: 4\n\t\t\t},\n\t\t\tadd_css$5\n\t\t);\n\t}\n}\n\n/* src/views/notify/StatusIconBadge.svelte generated by Svelte v3.59.2 */\n\nfunction add_css$4(target) {\n\tappend_styles(target, \"svelte-jvic9v\", \"div.notification-icons-wrapper.svelte-jvic9v{height:32px;width:32px}.border.svelte-jvic9v{border-radius:8px}div.notification-icon.svelte-jvic9v{padding:6px}div.pending-icon.svelte-jvic9v{animation:svelte-jvic9v-blink 2s ease-in infinite;height:100%;width:100%;padding:7px}@keyframes svelte-jvic9v-blink{from,to{opacity:1}50%{opacity:0.2}}div.border-action.svelte-jvic9v{height:32px;min-width:32px;border-radius:8px;overflow:hidden;will-change:transform}div.border-action.svelte-jvic9v:before{content:'';background-image:conic-gradient(#b1b7f2 20deg, #6370e5 120deg);height:140%;width:140%;position:absolute;left:-25%;top:-25%;animation:svelte-jvic9v-rotate 2s infinite linear}div.chain-icon-container.svelte-jvic9v{left:18px;top:18px}@keyframes svelte-jvic9v-rotate{100%{transform:rotate(-360deg)}}\");\n}\n\n// (63:0) {#if notification.type}\nfunction create_if_block$4(ctx) {\n\tlet div2;\n\tlet t0;\n\tlet div1;\n\tlet div0;\n\tlet raw_value = defaultNotifyEventStyles[/*notification*/ ctx[1].type]['eventIcon'] + \"\";\n\tlet div0_class_value;\n\tlet div1_style_value;\n\tlet t1;\n\tlet show_if = !/*notification*/ ctx[1].id.includes('customNotification') && !/*notification*/ ctx[1].id.includes('preflight');\n\tlet current;\n\tlet if_block0 = /*notification*/ ctx[1].type === 'pending' && create_if_block_2();\n\tlet if_block1 = show_if && create_if_block_1$1(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv2 = element(\"div\");\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt0 = space();\n\t\t\tdiv1 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tt1 = space();\n\t\t\tif (if_block1) if_block1.c();\n\n\t\t\tattr(div0, \"class\", div0_class_value = \"\" + (null_to_empty(`notification-icon flex items-center justify-center ${/*notification*/ ctx[1].type === 'pending'\n\t\t\t? 'pending-icon'\n\t\t\t: ''}`) + \" svelte-jvic9v\"));\n\n\t\t\tattr(div1, \"class\", \"flex items-center justify-center border relative notification-icons-wrapper svelte-jvic9v\");\n\n\t\t\tattr(div1, \"style\", div1_style_value = `background:${defaultNotifyEventStyles[/*notification*/ ctx[1].type]['backgroundColor']}; color: ${defaultNotifyEventStyles[/*notification*/ ctx[1].type]['iconColor'] || ''}; ${/*notification*/ ctx[1].type === 'pending'\n\t\t\t? 'height: 28px; width: 28px; margin: 2px;'\n\t\t\t: `border: 2px solid ${defaultNotifyEventStyles[/*notification*/ ctx[1].type]['borderColor']}`}; `);\n\n\t\t\tattr(div2, \"class\", \"relative\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div2, anchor);\n\t\t\tif (if_block0) if_block0.m(div2, null);\n\t\t\tappend(div2, t0);\n\t\t\tappend(div2, div1);\n\t\t\tappend(div1, div0);\n\t\t\tdiv0.innerHTML = raw_value;\n\t\t\tappend(div2, t1);\n\t\t\tif (if_block1) if_block1.m(div2, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (/*notification*/ ctx[1].type === 'pending') {\n\t\t\t\tif (if_block0) ; else {\n\t\t\t\t\tif_block0 = create_if_block_2();\n\t\t\t\t\tif_block0.c();\n\t\t\t\t\tif_block0.m(div2, t0);\n\t\t\t\t}\n\t\t\t} else if (if_block0) {\n\t\t\t\tif_block0.d(1);\n\t\t\t\tif_block0 = null;\n\t\t\t}\n\n\t\t\tif ((!current || dirty & /*notification*/ 2) && raw_value !== (raw_value = defaultNotifyEventStyles[/*notification*/ ctx[1].type]['eventIcon'] + \"\")) div0.innerHTML = raw_value;\n\t\t\tif (!current || dirty & /*notification*/ 2 && div0_class_value !== (div0_class_value = \"\" + (null_to_empty(`notification-icon flex items-center justify-center ${/*notification*/ ctx[1].type === 'pending'\n\t\t\t? 'pending-icon'\n\t\t\t: ''}`) + \" svelte-jvic9v\"))) {\n\t\t\t\tattr(div0, \"class\", div0_class_value);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*notification*/ 2 && div1_style_value !== (div1_style_value = `background:${defaultNotifyEventStyles[/*notification*/ ctx[1].type]['backgroundColor']}; color: ${defaultNotifyEventStyles[/*notification*/ ctx[1].type]['iconColor'] || ''}; ${/*notification*/ ctx[1].type === 'pending'\n\t\t\t? 'height: 28px; width: 28px; margin: 2px;'\n\t\t\t: `border: 2px solid ${defaultNotifyEventStyles[/*notification*/ ctx[1].type]['borderColor']}`}; `)) {\n\t\t\t\tattr(div1, \"style\", div1_style_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*notification*/ 2) show_if = !/*notification*/ ctx[1].id.includes('customNotification') && !/*notification*/ ctx[1].id.includes('preflight');\n\n\t\t\tif (show_if) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*notification*/ 2) {\n\t\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block_1$1(ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\tif_block1.m(div2, null);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block1, 1, 1, () => {\n\t\t\t\t\tif_block1 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block1);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block1);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div2);\n\t\t\tif (if_block0) if_block0.d();\n\t\t\tif (if_block1) if_block1.d();\n\t\t}\n\t};\n}\n\n// (65:4) {#if notification.type === 'pending'}\nfunction create_if_block_2(ctx) {\n\tlet div;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tattr(div, \"class\", \"border-action absolute svelte-jvic9v\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t}\n\t};\n}\n\n// (91:4) {#if !notification.id.includes('customNotification') && !notification.id.includes('preflight')}\nfunction create_if_block_1$1(ctx) {\n\tlet div;\n\tlet chainbadge;\n\tlet current;\n\n\tchainbadge = new ChainBadge({\n\t\t\tprops: {\n\t\t\t\ticon: /*chainStyles*/ ctx[0].icon,\n\t\t\t\tsize: 16,\n\t\t\t\tbackground: /*chainStyles*/ ctx[0].color,\n\t\t\t\tborderColorVar: `--notify-onboard-background, var(--onboard-gray-600, var(--gray-600))`,\n\t\t\t\tpadding: 3\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(chainbadge.$$.fragment);\n\t\t\tattr(div, \"class\", \"absolute chain-icon-container svelte-jvic9v\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(chainbadge, div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst chainbadge_changes = {};\n\t\t\tif (dirty & /*chainStyles*/ 1) chainbadge_changes.icon = /*chainStyles*/ ctx[0].icon;\n\t\t\tif (dirty & /*chainStyles*/ 1) chainbadge_changes.background = /*chainStyles*/ ctx[0].color;\n\t\t\tchainbadge.$set(chainbadge_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(chainbadge.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(chainbadge.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_component(chainbadge);\n\t\t}\n\t};\n}\n\nfunction create_fragment$4(ctx) {\n\tlet if_block_anchor;\n\tlet current;\n\tlet if_block = /*notification*/ ctx[1].type && create_if_block$4(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*notification*/ ctx[1].type) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*notification*/ 2) {\n\t\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$4(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block, 1, 1, () => {\n\t\t\t\t\tif_block = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t\tif (detaching) detach(if_block_anchor);\n\t\t}\n\t};\n}\n\nfunction instance$4($$self, $$props, $$invalidate) {\n\tlet { chainStyles = unrecognizedChainStyle } = $$props;\n\tlet { notification } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('chainStyles' in $$props) $$invalidate(0, chainStyles = $$props.chainStyles);\n\t\tif ('notification' in $$props) $$invalidate(1, notification = $$props.notification);\n\t};\n\n\treturn [chainStyles, notification];\n}\n\nclass StatusIconBadge extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$4, create_fragment$4, safe_not_equal, { chainStyles: 0, notification: 1 }, add_css$4);\n\t}\n}\n\n/* src/views/notify/Timer.svelte generated by Svelte v3.59.2 */\n\nfunction add_css$3(target) {\n\tappend_styles(target, \"svelte-pm7idu\", \"div.svelte-pm7idu{display:flex;justify-content:center;font-size:inherit;font-family:inherit;margin:0 1.5rem 0 0.75rem}span.svelte-pm7idu{font-family:inherit;display:flex;align-items:center;margin:0 2px}.time.svelte-pm7idu{color:var(\\n      --notify-onboard-timer-color,\\n      var(--onboard-gray-300, var(--gray-300))\\n    );margin-left:4px}\");\n}\n\n// (46:2) {#if startTime}\nfunction create_if_block$3(ctx) {\n\tlet t0;\n\tlet span;\n\tlet t1_value = /*timeString*/ ctx[2](/*currentTime*/ ctx[1] - /*startTime*/ ctx[0]) + \"\";\n\tlet t1;\n\tlet t2;\n\n\treturn {\n\t\tc() {\n\t\t\tt0 = text(\"-\\n    \");\n\t\t\tspan = element(\"span\");\n\t\t\tt1 = text(t1_value);\n\t\t\tt2 = text(\"\\n    ago\");\n\t\t\tattr(span, \"class\", \"svelte-pm7idu\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t0, anchor);\n\t\t\tinsert(target, span, anchor);\n\t\t\tappend(span, t1);\n\t\t\tinsert(target, t2, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*currentTime, startTime*/ 3 && t1_value !== (t1_value = /*timeString*/ ctx[2](/*currentTime*/ ctx[1] - /*startTime*/ ctx[0]) + \"\")) set_data(t1, t1_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(t0);\n\t\t\tif (detaching) detach(span);\n\t\t\tif (detaching) detach(t2);\n\t\t}\n\t};\n}\n\nfunction create_fragment$3(ctx) {\n\tlet div;\n\tlet if_block = /*startTime*/ ctx[0] && create_if_block$3(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(div, \"class\", \"time svelte-pm7idu\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tif (if_block) if_block.m(div, null);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*startTime*/ ctx[0]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$3(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(div, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tif (if_block) if_block.d();\n\t\t}\n\t};\n}\n\nfunction instance$3($$self, $$props, $$invalidate) {\n\tlet $formatter;\n\tlet $locale;\n\tcomponent_subscribe($$self, _, $$value => $$invalidate(3, $formatter = $$value));\n\tcomponent_subscribe($$self, locale, $$value => $$invalidate(4, $locale = $$value));\n\tlet { startTime } = $$props;\n\n\tfunction timeString(time) {\n\t\tconst seconds = Math.floor(time / 1000);\n\t\tconst formattedSeconds = seconds < 0 ? 0 : seconds;\n\n\t\treturn formattedSeconds >= 60\n\t\t? `${Math.floor(formattedSeconds / 60).toLocaleString($locale)} ${$formatter('notify.time.minutes')}`\n\t\t: `${formattedSeconds.toLocaleString($locale)} ${$formatter('notify.time.seconds')}`;\n\t}\n\n\tlet currentTime = Date.now();\n\n\tconst intervalId = setInterval(\n\t\t() => {\n\t\t\t$$invalidate(1, currentTime = Date.now());\n\t\t},\n\t\t1000\n\t);\n\n\tonDestroy(() => {\n\t\tclearInterval(intervalId);\n\t});\n\n\t$$self.$$set = $$props => {\n\t\tif ('startTime' in $$props) $$invalidate(0, startTime = $$props.startTime);\n\t};\n\n\treturn [startTime, currentTime, timeString];\n}\n\nclass Timer extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$3, create_fragment$3, safe_not_equal, { startTime: 0 }, add_css$3);\n\t}\n}\n\n/* src/views/notify/NotificationContent.svelte generated by Svelte v3.59.2 */\n\nfunction add_css$2(target) {\n\tappend_styles(target, \"svelte-1otz6tt\", \"div.notify-transaction-data.svelte-1otz6tt{font-size:var(\\n      --notify-onboard-transaction-font-size,\\n      var(--onboard-font-size-6, var(--font-size-6))\\n    );font-family:inherit;margin:0px 20px 0px 8px;justify-content:center}.hash-time.svelte-1otz6tt{display:inline-flex;margin-top:4px;font-size:var(\\n      --notify-onboard-hash-time-font-size,\\n      var(--onboard-font-size-7, var(--font-size-7))\\n    );line-height:var(\\n      --notify-onboard-hash-time-font-line-height,\\n      var(--onboard-font-line-height-4, var(--font-line-height-4))\\n    )}.address-hash.svelte-1otz6tt{color:var(\\n      --notify-onboard-address-hash-color,\\n      var(--onboard-primary-200, var(--primary-200))\\n    )}a.address-hash.svelte-1otz6tt{color:var(\\n      --notify-onboard-anchor-color,\\n      var(--onboard-primary-400, var(--primary-400))\\n    )}a.svelte-1otz6tt{display:flex;text-decoration:none;color:inherit}.transaction-status.svelte-1otz6tt{color:var(--notify-onboard-transaction-status, inherit);line-height:var(\\n      --notify-onboard-font-size-5,\\n      var(--onboard-font-size-5, var(--font-size-5))\\n    );font-weight:400;overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical}\");\n}\n\n// (71:2) {#if notification.id && !notification.id.includes('customNotification') && !notification.id.includes('preflight')}\nfunction create_if_block$2(ctx) {\n\tlet span;\n\tlet t;\n\tlet timer;\n\tlet current;\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*notification*/ ctx[0].link) return create_if_block_1;\n\t\treturn create_else_block;\n\t}\n\n\tlet current_block_type = select_block_type(ctx);\n\tlet if_block = current_block_type(ctx);\n\n\ttimer = new Timer({\n\t\t\tprops: {\n\t\t\t\tstartTime: /*notification*/ ctx[0].startTime\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tif_block.c();\n\t\t\tt = space();\n\t\t\tcreate_component(timer.$$.fragment);\n\t\t\tattr(span, \"class\", \"hash-time svelte-1otz6tt\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t\tif_block.m(span, null);\n\t\t\tappend(span, t);\n\t\t\tmount_component(timer, span, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {\n\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = current_block_type(ctx);\n\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(span, t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst timer_changes = {};\n\t\t\tif (dirty & /*notification*/ 1) timer_changes.startTime = /*notification*/ ctx[0].startTime;\n\t\t\ttimer.$set(timer_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(timer.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(timer.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(span);\n\t\t\tif_block.d();\n\t\t\tdestroy_component(timer);\n\t\t}\n\t};\n}\n\n// (82:6) {:else}\nfunction create_else_block(ctx) {\n\tlet div;\n\tlet t_value = shortenAddress(/*notification*/ ctx[0].id) + \"\";\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tt = text(t_value);\n\t\t\tattr(div, \"class\", \"address-hash svelte-1otz6tt\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, t);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*notification*/ 1 && t_value !== (t_value = shortenAddress(/*notification*/ ctx[0].id) + \"\")) set_data(t, t_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t}\n\t};\n}\n\n// (73:6) {#if notification.link}\nfunction create_if_block_1(ctx) {\n\tlet a;\n\tlet t_value = shortenAddress(/*notification*/ ctx[0].id) + \"\";\n\tlet t;\n\tlet a_href_value;\n\n\treturn {\n\t\tc() {\n\t\t\ta = element(\"a\");\n\t\t\tt = text(t_value);\n\t\t\tattr(a, \"class\", \"address-hash svelte-1otz6tt\");\n\t\t\tattr(a, \"href\", a_href_value = /*notification*/ ctx[0].link);\n\t\t\tattr(a, \"target\", \"_blank\");\n\t\t\tattr(a, \"rel\", \"noreferrer noopener\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, a, anchor);\n\t\t\tappend(a, t);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*notification*/ 1 && t_value !== (t_value = shortenAddress(/*notification*/ ctx[0].id) + \"\")) set_data(t, t_value);\n\n\t\t\tif (dirty & /*notification*/ 1 && a_href_value !== (a_href_value = /*notification*/ ctx[0].link)) {\n\t\t\t\tattr(a, \"href\", a_href_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(a);\n\t\t}\n\t};\n}\n\nfunction create_fragment$2(ctx) {\n\tlet div;\n\tlet span;\n\tlet t0_value = /*notification*/ ctx[0].message + \"\";\n\tlet t0;\n\tlet t1;\n\tlet show_if = /*notification*/ ctx[0].id && !/*notification*/ ctx[0].id.includes('customNotification') && !/*notification*/ ctx[0].id.includes('preflight');\n\tlet current;\n\tlet if_block = show_if && create_if_block$2(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tspan = element(\"span\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(span, \"class\", \"transaction-status svelte-1otz6tt\");\n\t\t\tattr(div, \"class\", \"flex flex-column notify-transaction-data svelte-1otz6tt\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, span);\n\t\t\tappend(span, t0);\n\t\t\tappend(div, t1);\n\t\t\tif (if_block) if_block.m(div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif ((!current || dirty & /*notification*/ 1) && t0_value !== (t0_value = /*notification*/ ctx[0].message + \"\")) set_data(t0, t0_value);\n\t\t\tif (dirty & /*notification*/ 1) show_if = /*notification*/ ctx[0].id && !/*notification*/ ctx[0].id.includes('customNotification') && !/*notification*/ ctx[0].id.includes('preflight');\n\n\t\t\tif (show_if) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*notification*/ 1) {\n\t\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$2(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(div, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block, 1, 1, () => {\n\t\t\t\t\tif_block = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tif (if_block) if_block.d();\n\t\t}\n\t};\n}\n\nfunction instance$2($$self, $$props, $$invalidate) {\n\tlet { notification } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('notification' in $$props) $$invalidate(0, notification = $$props.notification);\n\t};\n\n\treturn [notification];\n}\n\nclass NotificationContent extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$2, create_fragment$2, safe_not_equal, { notification: 0 }, add_css$2);\n\t}\n}\n\nvar closeIcon = `\n<svg width=\"100%\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M10 0C4.47 0 0 4.47 0 10C0 15.53 4.47 20 10 20C15.53 20 20 15.53 20 10C20 4.47 15.53 0 10 0ZM15 13.59L13.59 15L10 11.41L6.41 15L5 13.59L8.59 10L5 6.41L6.41 5L10 8.59L13.59 5L15 6.41L11.41 10L15 13.59Z\" fill=\"currentColor\"/>\n</svg>\n`;\n\nconst ACTIONABLE_EVENT_CODES = ['txPool'];\nconst VALID_GAS_NETWORKS = ['main', 'matic-main'];\nconst WALLETS_SUPPORT_REPLACEMENT = [\n    'Ledger',\n    'Trezor',\n    'Keystone',\n    'KeepKey',\n    `D'CENT`\n];\nconst actionableEventCode = (eventCode) => ACTIONABLE_EVENT_CODES.includes(eventCode);\nconst validGasNetwork = (network) => VALID_GAS_NETWORKS.includes(network);\nconst walletSupportsReplacement = (wallet) => wallet && WALLETS_SUPPORT_REPLACEMENT.includes(wallet.label);\nasync function replaceTransaction({ type, wallet, transaction }) {\n    const { from, input, value, to, nonce, gas: gasLimit, network } = transaction;\n    const chainId = networkToChainId[network];\n    const { gasPriceProbability } = state.get().notify.replacement;\n    const { gas, apiKey } = configuration;\n    // get gas price\n    const [gasResult] = await gas.get({\n        chains: [networkToChainId[network]],\n        endpoint: 'blockPrices',\n        apiKey\n    });\n    const { maxFeePerGas, maxPriorityFeePerGas } = gasResult.blockPrices[0].estimatedPrices.find(({ confidence }) => confidence ===\n        (type === 'speedup'\n            ? gasPriceProbability.speedup\n            : gasPriceProbability.cancel));\n    const maxFeePerGasWeiHex = gweiToWeiHex(maxFeePerGas);\n    const maxPriorityFeePerGasWeiHex = gweiToWeiHex(maxPriorityFeePerGas);\n    // Some wallets do not like empty '0x' val\n    const dataObj = input === '0x' ? {} : { data: input };\n    return wallet.provider.request({\n        method: 'eth_sendTransaction',\n        params: [\n            {\n                type: '0x2',\n                from,\n                to: type === 'cancel' ? from : to,\n                chainId: parseInt(chainId),\n                value: `${BigNumber.from(value).toHexString()}`,\n                nonce: toHexString(nonce),\n                gasLimit: toHexString(gasLimit),\n                maxFeePerGas: maxFeePerGasWeiHex,\n                maxPriorityFeePerGas: maxPriorityFeePerGasWeiHex,\n                ...dataObj\n            }\n        ]\n    });\n}\n\n/* src/views/notify/Notification.svelte generated by Svelte v3.59.2 */\n\nfunction add_css$1(target) {\n\tappend_styles(target, \"svelte-ftkynd\", \".bn-notify-notification.svelte-ftkynd.svelte-ftkynd.svelte-ftkynd{--backround-color:var(--notify-onboard-background, var(--w3o-backround-color, var(--gray-700)));--foreground-color:var(--w3o-foreground-color, var(--gray-600));--text-color:var(--w3o-text-color, #FFF);--border-color:var(--w3o-border-color);font-family:inherit;transition:background 300ms ease-in-out, color 300ms ease-in-out;pointer-events:all;backdrop-filter:blur(5px);width:100%;min-height:56px;display:flex;flex-direction:column;position:relative;overflow:hidden;border:1px solid transparent;border-radius:var(\\n      --notify-onboard-border-radius,\\n      var(--onboard-border-radius-4, var(--border-radius-4))\\n    );background:var(--foreground-color);color:var(--text-color)}.bn-notify-notification-inner.svelte-ftkynd.svelte-ftkynd.svelte-ftkynd{padding:0.75rem}.bn-notify-notification.svelte-ftkynd:hover>div.bn-notify-notification-inner.svelte-ftkynd>div.notify-close-btn-desktop.svelte-ftkynd{visibility:visible;opacity:1}div.notify-close-btn.svelte-ftkynd.svelte-ftkynd.svelte-ftkynd{margin-left:auto;margin-bottom:auto;height:24px;width:24px;position:absolute;top:8px;right:8px;justify-content:center;align-items:center}div.notify-close-btn-desktop.svelte-ftkynd.svelte-ftkynd.svelte-ftkynd{visibility:hidden;transition:visibility 0.15s linear, opacity 0.15s linear;opacity:0}.notify-close-btn.svelte-ftkynd .close-icon.svelte-ftkynd.svelte-ftkynd{width:20px;margin:auto;color:var(--text-color)}.notify-close-btn.svelte-ftkynd>.close-icon.svelte-ftkynd.svelte-ftkynd{color:var(--notify-onboard-close-icon-color)}.notify-close-btn.svelte-ftkynd:hover>.close-icon.svelte-ftkynd.svelte-ftkynd{color:var(--notify-onboard-close-icon-hover)}.transaction-status.svelte-ftkynd.svelte-ftkynd.svelte-ftkynd{color:var(\\n      --notify-onboard-transaction-status-color,\\n      var(--onboard-primary-100, var(--primary-100))\\n    );line-height:14px}.dropdown.svelte-ftkynd.svelte-ftkynd.svelte-ftkynd{height:0px;overflow:hidden;transition:height 150ms ease-in-out}.dropdown-visible.svelte-ftkynd.svelte-ftkynd.svelte-ftkynd{height:48px}.dropdown-buttons.svelte-ftkynd.svelte-ftkynd.svelte-ftkynd{background-color:var(\\n      --notify-onboard-dropdown-background,\\n      var(--onboard-gray-700, var(--gray-700))\\n    );width:100%;padding:8px}.dropdown-button.svelte-ftkynd.svelte-ftkynd.svelte-ftkynd{padding:4px 12px;border-radius:var(\\n      --notify-onboard-dropdown-border-radius,\\n      var(--onboard-border-radius-5, var(--border-radius-5))\\n    );background-color:transparent;font-size:var(\\n      --notify-onboard-dropdown-font-size,\\n      var(--onboard-font-size-6, var(--font-size-6))\\n    );color:var(\\n      --notify-onboard-dropdown-text-color,\\n      var(--onboard-primary-400, var(--primary-400))\\n    );transition:all 150ms ease-in-out;cursor:pointer}.dropdown-button.svelte-ftkynd.svelte-ftkynd.svelte-ftkynd:hover{background:var(\\n      --notify-onboard-dropdown-btn-hover-background,\\n      rgba(146, 155, 237, 0.2)\\n    )}\");\n}\n\n// (194:4) {#if notification.eventCode === 'txPool'}\nfunction create_if_block$1(ctx) {\n\tlet div;\n\tlet button0;\n\tlet t1;\n\tlet button1;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tbutton0 = element(\"button\");\n\t\t\tbutton0.textContent = \"Cancel\";\n\t\t\tt1 = space();\n\t\t\tbutton1 = element(\"button\");\n\t\t\tbutton1.textContent = \"Speed-up\";\n\t\t\tattr(button0, \"class\", \"dropdown-button svelte-ftkynd\");\n\t\t\tattr(button1, \"class\", \"dropdown-button svelte-ftkynd\");\n\t\t\tattr(div, \"class\", \"dropdown-buttons flex items-center justify-end svelte-ftkynd\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, button0);\n\t\t\tappend(div, t1);\n\t\t\tappend(div, button1);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(button0, \"click\", /*click_handler_1*/ ctx[9]),\n\t\t\t\t\tlisten(button1, \"click\", /*click_handler_2*/ ctx[10])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction create_fragment$1(ctx) {\n\tlet div4;\n\tlet div2;\n\tlet statusiconbadge;\n\tlet t0;\n\tlet notificationcontent;\n\tlet t1;\n\tlet div1;\n\tlet div0;\n\tlet t2;\n\tlet div3;\n\tlet div4_class_value;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\n\tstatusiconbadge = new StatusIconBadge({\n\t\t\tprops: {\n\t\t\t\tnotification: /*notification*/ ctx[0],\n\t\t\t\tchainStyles: chainStyles[networkToChainId[/*notification*/ ctx[0].network]]\n\t\t\t}\n\t\t});\n\n\tnotificationcontent = new NotificationContent({\n\t\t\tprops: { notification: /*notification*/ ctx[0] }\n\t\t});\n\n\tlet if_block = /*notification*/ ctx[0].eventCode === 'txPool' && create_if_block$1(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv4 = element(\"div\");\n\t\t\tdiv2 = element(\"div\");\n\t\t\tcreate_component(statusiconbadge.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tcreate_component(notificationcontent.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tdiv1 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tt2 = space();\n\t\t\tdiv3 = element(\"div\");\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(div0, \"class\", \"flex items-center close-icon svelte-ftkynd\");\n\t\t\tattr(div1, \"class\", \"notify-close-btn notify-close-btn-\" + /*device*/ ctx[4].type + \" pointer flex\" + \" svelte-ftkynd\");\n\t\t\tattr(div2, \"class\", \"flex bn-notify-notification-inner svelte-ftkynd\");\n\t\t\tattr(div3, \"class\", \"dropdown svelte-ftkynd\");\n\t\t\ttoggle_class(div3, \"dropdown-visible\", /*hovered*/ ctx[2] && /*gas*/ ctx[5] && actionableEventCode(/*notification*/ ctx[0].eventCode) && validGasNetwork(/*notification*/ ctx[0].network) && walletSupportsReplacement(/*wallet*/ ctx[7]));\n\t\t\tattr(div4, \"class\", div4_class_value = \"bn-notify-notification bn-notify-notification-\" + /*notification*/ ctx[0].type + \"}\" + \" svelte-ftkynd\");\n\t\t\ttoggle_class(div4, \"bn-notify-clickable\", /*notification*/ ctx[0].onClick);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div4, anchor);\n\t\t\tappend(div4, div2);\n\t\t\tmount_component(statusiconbadge, div2, null);\n\t\t\tappend(div2, t0);\n\t\t\tmount_component(notificationcontent, div2, null);\n\t\t\tappend(div2, t1);\n\t\t\tappend(div2, div1);\n\t\t\tappend(div1, div0);\n\t\t\tdiv0.innerHTML = closeIcon;\n\t\t\tappend(div4, t2);\n\t\t\tappend(div4, div3);\n\t\t\tif (if_block) if_block.m(div3, null);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(div1, \"click\", stop_propagation(/*click_handler*/ ctx[8])),\n\t\t\t\t\tlisten(div4, \"mouseenter\", /*mouseenter_handler*/ ctx[11]),\n\t\t\t\t\tlisten(div4, \"mouseleave\", /*mouseleave_handler*/ ctx[12]),\n\t\t\t\t\tlisten(div4, \"click\", /*click_handler_3*/ ctx[13])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst statusiconbadge_changes = {};\n\t\t\tif (dirty & /*notification*/ 1) statusiconbadge_changes.notification = /*notification*/ ctx[0];\n\t\t\tif (dirty & /*notification*/ 1) statusiconbadge_changes.chainStyles = chainStyles[networkToChainId[/*notification*/ ctx[0].network]];\n\t\t\tstatusiconbadge.$set(statusiconbadge_changes);\n\t\t\tconst notificationcontent_changes = {};\n\t\t\tif (dirty & /*notification*/ 1) notificationcontent_changes.notification = /*notification*/ ctx[0];\n\t\t\tnotificationcontent.$set(notificationcontent_changes);\n\n\t\t\tif (/*notification*/ ctx[0].eventCode === 'txPool') {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$1(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(div3, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*hovered, gas, actionableEventCode, notification, validGasNetwork, walletSupportsReplacement, wallet*/ 165) {\n\t\t\t\ttoggle_class(div3, \"dropdown-visible\", /*hovered*/ ctx[2] && /*gas*/ ctx[5] && actionableEventCode(/*notification*/ ctx[0].eventCode) && validGasNetwork(/*notification*/ ctx[0].network) && walletSupportsReplacement(/*wallet*/ ctx[7]));\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*notification*/ 1 && div4_class_value !== (div4_class_value = \"bn-notify-notification bn-notify-notification-\" + /*notification*/ ctx[0].type + \"}\" + \" svelte-ftkynd\")) {\n\t\t\t\tattr(div4, \"class\", div4_class_value);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*notification, notification*/ 1) {\n\t\t\t\ttoggle_class(div4, \"bn-notify-clickable\", /*notification*/ ctx[0].onClick);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(statusiconbadge.$$.fragment, local);\n\t\t\ttransition_in(notificationcontent.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(statusiconbadge.$$.fragment, local);\n\t\t\ttransition_out(notificationcontent.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div4);\n\t\t\tdestroy_component(statusiconbadge);\n\t\t\tdestroy_component(notificationcontent);\n\t\t\tif (if_block) if_block.d();\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction instance$1($$self, $$props, $$invalidate) {\n\tlet $wallets$;\n\tlet $_;\n\tcomponent_subscribe($$self, wallets$, $$value => $$invalidate(15, $wallets$ = $$value));\n\tcomponent_subscribe($$self, _, $$value => $$invalidate(3, $_ = $$value));\n\tconst { device, gas } = configuration;\n\tlet { notification } = $$props;\n\tlet { updateParentOnRemove } = $$props;\n\tlet timeoutId;\n\tlet hovered = false;\n\n\t// get transaction based on notification id\n\tconst transaction = transactions$.getValue().find(({ hash }) => hash === notification.id);\n\n\t// get wallet that sent transaction\n\tconst wallet = transaction && $wallets$.find(({ accounts }) => !!accounts.find(({ address }) => address.toLowerCase() === transaction.from.toLowerCase()));\n\n\tonDestroy(() => {\n\t\tclearTimeout(timeoutId);\n\t});\n\n\tconst click_handler = () => {\n\t\tremoveNotification(notification.id);\n\t\tremoveTransaction(notification.id);\n\t\tupdateParentOnRemove();\n\t};\n\n\tconst click_handler_1 = async () => {\n\t\ttry {\n\t\t\tawait replaceTransaction({ type: 'cancel', wallet, transaction });\n\t\t} catch(error) {\n\t\t\t// we want a unique id so that the hint notification does not replace the pending notification, so it can't just be the hash\n\t\t\t// but the id is displayed as a hash, so we need to insert the error in the middle\n\t\t\tconst id = `${transaction.hash.slice(0, 9)}:txReplaceError${transaction.hash.slice(-5)}`;\n\n\t\t\taddCustomNotification({\n\t\t\t\tid,\n\t\t\t\ttype: 'hint',\n\t\t\t\teventCode: 'txError',\n\t\t\t\tmessage: $_('notify.transaction.txReplaceError'),\n\t\t\t\tkey: id,\n\t\t\t\tautoDismiss: 4000\n\t\t\t});\n\t\t}\n\t};\n\n\tconst click_handler_2 = async () => {\n\t\ttry {\n\t\t\tawait replaceTransaction({ type: 'speedup', wallet, transaction });\n\t\t} catch(error) {\n\t\t\t// we want a unique id so that the hint notification does not replace the pending notification, so it can't just be the hash\n\t\t\t// but the id is displayed as a hash, so we need to insert the error in the middle\n\t\t\tconst id = `${transaction.hash.slice(0, 9)}:txReplaceError${transaction.hash.slice(-5)}`;\n\n\t\t\taddCustomNotification({\n\t\t\t\tid,\n\t\t\t\ttype: 'hint',\n\t\t\t\teventCode: 'txError',\n\t\t\t\tmessage: $_('notify.transaction.txReplaceError'),\n\t\t\t\tkey: id,\n\t\t\t\tautoDismiss: 4000\n\t\t\t});\n\t\t}\n\t};\n\n\tconst mouseenter_handler = () => $$invalidate(2, hovered = true);\n\tconst mouseleave_handler = () => $$invalidate(2, hovered = false);\n\tconst click_handler_3 = e => notification.onClick && notification.onClick(e);\n\n\t$$self.$$set = $$props => {\n\t\tif ('notification' in $$props) $$invalidate(0, notification = $$props.notification);\n\t\tif ('updateParentOnRemove' in $$props) $$invalidate(1, updateParentOnRemove = $$props.updateParentOnRemove);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*notification*/ 1) {\n\t\t\tif (notification.autoDismiss) {\n\t\t\t\ttimeoutId = setTimeout(\n\t\t\t\t\t() => {\n\t\t\t\t\t\tremoveNotification(notification.id);\n\t\t\t\t\t\tremoveTransaction(notification.id);\n\t\t\t\t\t},\n\t\t\t\t\tnotification.autoDismiss\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\tnotification,\n\t\tupdateParentOnRemove,\n\t\thovered,\n\t\t$_,\n\t\tdevice,\n\t\tgas,\n\t\ttransaction,\n\t\twallet,\n\t\tclick_handler,\n\t\tclick_handler_1,\n\t\tclick_handler_2,\n\t\tmouseenter_handler,\n\t\tmouseleave_handler,\n\t\tclick_handler_3\n\t];\n}\n\nclass Notification extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$1, create_fragment$1, safe_not_equal, { notification: 0, updateParentOnRemove: 1 }, add_css$1);\n\t}\n}\n\n/* src/views/notify/Index.svelte generated by Svelte v3.59.2 */\n\nfunction add_css(target) {\n\tappend_styles(target, \"svelte-1h8mmo3\", \"ul.svelte-1h8mmo3{padding-left:0;display:flex;flex-flow:column nowrap;font-size:var(\\n      --notify-onboard-font-size,\\n      var(--onboard-font-size-5, var(--font-size-5))\\n    );list-style-type:none;overflow:visible;scrollbar-width:none;box-sizing:border-box;z-index:var(--notify-onboard-z-index, 300);font-family:var(\\n      --notify-onboard-font-family,\\n      var(--onboard-font-family-normal, inherit)\\n    );margin:8px 0;pointer-events:all}.y-scroll.svelte-1h8mmo3{overflow-y:scroll}.y-visible.svelte-1h8mmo3{overflow-y:visible}li.notification-list-top.svelte-1h8mmo3:not(:first-child){margin-top:8px}li.notification-list-bottom.svelte-1h8mmo3:not(:first-child){margin-bottom:8px}ul.bn-notify-bottomLeft.svelte-1h8mmo3,ul.bn-notify-bottomRight.svelte-1h8mmo3{flex-direction:column-reverse}@media only screen and (max-width: 450px){ul.svelte-1h8mmo3{width:100%}}.bn-notify-clickable:hover{cursor:pointer}.svelte-1h8mmo3::-webkit-scrollbar{display:none}\");\n}\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[12] = list[i];\n\treturn child_ctx;\n}\n\n// (105:0) {#if notifications.length}\nfunction create_if_block(ctx) {\n\tlet ul;\n\tlet each_blocks = [];\n\tlet each_1_lookup = new Map();\n\tlet ul_class_value;\n\tlet ul_style_value;\n\tlet current;\n\tlet each_value = /*notifications*/ ctx[2];\n\tconst get_key = ctx => /*notification*/ ctx[12].key;\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\tlet child_ctx = get_each_context(ctx, each_value, i);\n\t\tlet key = get_key(child_ctx);\n\t\teach_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tul = element(\"ul\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tattr(ul, \"class\", ul_class_value = \"bn-notify-\" + /*position*/ ctx[0] + \" \" + /*overflowY*/ ctx[5] + \" svelte-1h8mmo3\");\n\n\t\t\tattr(ul, \"style\", ul_style_value = `${/*position*/ ctx[0].includes('top')\n\t\t\t? 'justify-content:flex-start;'\n\t\t\t: ''}; max-height: calc(100vh - ${/*$accountCenter$*/ ctx[6].expanded\n\t\t\t? '412px'\n\t\t\t: /*sharedContainer*/ ctx[1] && /*device*/ ctx[7].type !== 'mobile'\n\t\t\t\t? '82px'\n\t\t\t\t: !/*sharedContainer*/ ctx[1] && /*device*/ ctx[7].type === 'mobile'\n\t\t\t\t\t? '108px'\n\t\t\t\t\t: '24px'})`);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, ul, anchor);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\teach_blocks[i].m(ul, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*position, cubicOut, notifications, updateScrollYOnRemove*/ 517) {\n\t\t\t\teach_value = /*notifications*/ ctx[2];\n\t\t\t\tgroup_outros();\n\t\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) each_blocks[i].r();\n\t\t\t\teach_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, ul, fix_and_outro_and_destroy_block, create_each_block, null, get_each_context);\n\t\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) each_blocks[i].a();\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*position, overflowY*/ 33 && ul_class_value !== (ul_class_value = \"bn-notify-\" + /*position*/ ctx[0] + \" \" + /*overflowY*/ ctx[5] + \" svelte-1h8mmo3\")) {\n\t\t\t\tattr(ul, \"class\", ul_class_value);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*position, $accountCenter$, sharedContainer*/ 67 && ul_style_value !== (ul_style_value = `${/*position*/ ctx[0].includes('top')\n\t\t\t? 'justify-content:flex-start;'\n\t\t\t: ''}; max-height: calc(100vh - ${/*$accountCenter$*/ ctx[6].expanded\n\t\t\t? '412px'\n\t\t\t: /*sharedContainer*/ ctx[1] && /*device*/ ctx[7].type !== 'mobile'\n\t\t\t\t? '82px'\n\t\t\t\t: !/*sharedContainer*/ ctx[1] && /*device*/ ctx[7].type === 'mobile'\n\t\t\t\t\t? '108px'\n\t\t\t\t\t: '24px'})`)) {\n\t\t\t\tattr(ul, \"style\", ul_style_value);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(ul);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].d();\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (120:4) {#each notifications as notification (notification.key)}\nfunction create_each_block(key_1, ctx) {\n\tlet li;\n\tlet notification;\n\tlet t;\n\tlet li_class_value;\n\tlet li_intro;\n\tlet li_outro;\n\tlet rect;\n\tlet stop_animation = noop;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\n\tnotification = new Notification({\n\t\t\tprops: {\n\t\t\t\tnotification: /*notification*/ ctx[12],\n\t\t\t\tupdateParentOnRemove: /*updateScrollYOnRemove*/ ctx[9]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tkey: key_1,\n\t\tfirst: null,\n\t\tc() {\n\t\t\tli = element(\"li\");\n\t\t\tcreate_component(notification.$$.fragment);\n\t\t\tt = space();\n\n\t\t\tattr(li, \"class\", li_class_value = \"\" + (null_to_empty(`bn-notify-li-${/*position*/ ctx[0]} ${/*position*/ ctx[0].includes('top')\n\t\t\t? 'notification-list-top'\n\t\t\t: 'notification-list-bottom'}`) + \" svelte-1h8mmo3\"));\n\n\t\t\tthis.first = li;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, li, anchor);\n\t\t\tmount_component(notification, li, null);\n\t\t\tappend(li, t);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(li, \"click\", stop_propagation(/*click_handler*/ ctx[10]));\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tconst notification_changes = {};\n\t\t\tif (dirty & /*notifications*/ 4) notification_changes.notification = /*notification*/ ctx[12];\n\t\t\tnotification.$set(notification_changes);\n\n\t\t\tif (!current || dirty & /*position*/ 1 && li_class_value !== (li_class_value = \"\" + (null_to_empty(`bn-notify-li-${/*position*/ ctx[0]} ${/*position*/ ctx[0].includes('top')\n\t\t\t? 'notification-list-top'\n\t\t\t: 'notification-list-bottom'}`) + \" svelte-1h8mmo3\"))) {\n\t\t\t\tattr(li, \"class\", li_class_value);\n\t\t\t}\n\t\t},\n\t\tr() {\n\t\t\trect = li.getBoundingClientRect();\n\t\t},\n\t\tf() {\n\t\t\tfix_position(li);\n\t\t\tstop_animation();\n\t\t\tadd_transform(li, rect);\n\t\t},\n\t\ta() {\n\t\t\tstop_animation();\n\t\t\tstop_animation = create_animation(li, rect, flip, { duration: 500 });\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(notification.$$.fragment, local);\n\n\t\t\tif (local) {\n\t\t\t\tadd_render_callback(() => {\n\t\t\t\t\tif (!current) return;\n\t\t\t\t\tif (li_outro) li_outro.end(1);\n\n\t\t\t\t\tli_intro = create_in_transition(li, fly, {\n\t\t\t\t\t\tduration: 1200,\n\t\t\t\t\t\tdelay: 300,\n\t\t\t\t\t\tx: /*x*/ ctx[3],\n\t\t\t\t\t\ty: /*y*/ ctx[4],\n\t\t\t\t\t\teasing: elasticOut\n\t\t\t\t\t});\n\n\t\t\t\t\tli_intro.start();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(notification.$$.fragment, local);\n\t\t\tif (li_intro) li_intro.invalidate();\n\t\t\tli_outro = create_out_transition(li, fade, { duration: 300, easing: cubicOut });\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(li);\n\t\t\tdestroy_component(notification);\n\t\t\tif (detaching && li_outro) li_outro.end();\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet if_block_anchor;\n\tlet current;\n\tlet if_block = /*notifications*/ ctx[2].length && create_if_block(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*notifications*/ ctx[2].length) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*notifications*/ 4) {\n\t\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block, 1, 1, () => {\n\t\t\t\t\tif_block = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t\tif (detaching) detach(if_block_anchor);\n\t\t}\n\t};\n}\n\nfunction elasticOut(t) {\n\treturn Math.sin(-13.0 * (t + 1.0) * Math.PI / 2) * Math.pow(2.0, -35.0 * t) + 1.0;\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet $accountCenter$;\n\tconst { device } = configuration;\n\tconst accountCenter$ = state.select('accountCenter').pipe(startWith(state.get().accountCenter), shareReplay(1));\n\tcomponent_subscribe($$self, accountCenter$, value => $$invalidate(6, $accountCenter$ = value));\n\tlet { position } = $$props;\n\tlet { sharedContainer } = $$props;\n\tlet { notifications } = $$props;\n\tlet x;\n\tlet y;\n\tx = 0;\n\ty = 0;\n\tlet overflowY = 'y-scroll';\n\n\tconst updateScrollYOnRemove = () => {\n\t\tif (overflowY !== 'y-visible') {\n\t\t\t$$invalidate(5, overflowY = 'y-visible');\n\t\t}\n\n\t\tdelay(\n\t\t\tfunction () {\n\t\t\t\t$$invalidate(5, overflowY = 'y-scroll');\n\t\t\t},\n\t\t\t1000\n\t\t);\n\t};\n\n\tconst delay = (function () {\n\t\tlet timer = null;\n\n\t\treturn (callback, ms) => {\n\t\t\tclearTimeout(timer);\n\t\t\ttimer = setTimeout(callback, ms);\n\t\t};\n\t})();\n\n\tfunction click_handler(event) {\n\t\tbubble.call(this, $$self, event);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('position' in $$props) $$invalidate(0, position = $$props.position);\n\t\tif ('sharedContainer' in $$props) $$invalidate(1, sharedContainer = $$props.sharedContainer);\n\t\tif ('notifications' in $$props) $$invalidate(2, notifications = $$props.notifications);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*position*/ 1) {\n\t\t\tif (position.includes('top')) {\n\t\t\t\t$$invalidate(4, y = -50);\n\t\t\t} else {\n\t\t\t\t$$invalidate(4, y = 50);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\tposition,\n\t\tsharedContainer,\n\t\tnotifications,\n\t\tx,\n\t\ty,\n\t\toverflowY,\n\t\t$accountCenter$,\n\t\tdevice,\n\t\taccountCenter$,\n\t\tupdateScrollYOnRemove,\n\t\tclick_handler\n\t];\n}\n\nclass Index extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance,\n\t\t\tcreate_fragment,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tposition: 0,\n\t\t\t\tsharedContainer: 1,\n\t\t\t\tnotifications: 2\n\t\t\t},\n\t\t\tadd_css\n\t\t);\n\t}\n}\n\nexport { Index as default };\n"],"names":[],"sourceRoot":""}