{"version":3,"file":"default-uiweb_node_modules_rxjs_dist_esm5_internal_operators_auditTime_js-uiweb_node_modules_-67ca7e.js","mappings":";;;;;;;;;;;;AAAkC;AACE;AACpC;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,6CAAO;AACe;AACxB;;;;;;;;;;;;;;;;;ACtC2C;AACN;AACgB;AACN;AACxC;AACP;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAE;AAClB;AACA;AACA;AACA,wBAAwB,kEAAU,eAAe,eAAe;AAChE;AACA;AACA;AACA,gCAAgC,oDAAK;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACuB;AACjB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvEkC;AACS;AACI;AACyB;AACG;AACpC;AACvC;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,uDAAY;AAC5D;AACA,iDAAiD,uFAAwB;AACzE;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa,gBAAgB,2BAA2B;AACxD;AACA;AACA,6BAA6B,6DAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA,eAAe,6DAAmB;AAClC;AACA;AACA,CAAC,CAAC,mDAAU;AACqB;AACjC;;;;;;;;;;;;;;;;;;;;;AC9D2C;AACyB;AACtC;AACc;AACgB;AACG;AACX;AACuB;AACjB;AACnD;AACP;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,oBAAoB,wDAAY;AAChC,yBAAyB,6DAAiB;AAC1C,aAAa,gFAAoB;AACjC;AACA,eAAe,2CAAI;AACnB;AACA,qBAAqB,mDAAU;AAC/B;AACA,gCAAgC,OAAO,gEAAY;AACnD;AACA,YAAY,oDAAQ;AACpB,wCAAwC,wEAAgB;AACxD;AACO;AACP,qCAAqC,iBAAiB,oDAAQ;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,2CAAI;AACrC;AACA,qCAAqC,uFAAwB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,4BAA4B,YAAY;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ,sEAAe;AACvB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrE2C;AACpC;AACP,eAAe,mDAAU,yBAAyB,4CAA4C;AAC9F;AACA;;;;;;;;;;;;;ACJoD;AACpB;AACzB;AACP,6BAA6B;AAC7B,gCAAgC,YAAY,4DAAc;AAC1D;AACA;AACA;AACA,WAAW,6CAAK;AAChB;AACA;;;;;;;;;;;;;;;;ACV2C;AACa;AACa;AACjC;AACI;AACjC;AACP;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,sBAAsB,oEAAc;AACpC,eAAe,mDAAU;AACzB;AACA;AACA;AACA;AACA;AACA,iCAAiC,qDAAS;AAC1C;AACA;AACA;AACA;AACA;AACA,0CAA0C,6EAAkB,wBAAwB,4CAAI,EAAE,4CAAI;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;AClC2C;AACH;AACgB;AACmB;AACpE;AACP;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,cAAc,oEAAc;AAC5B,kCAAkC,qDAAS,mBAAmB,mDAAU;AACxE;AACO;AACP;AACA;AACA;AACA,+BAA+B,qDAAS,uBAAuB,uFAAwB;AACvF;AACA,oCAAoC,0BAA0B;AAC9D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB,2DAA2D;AACnF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/B2C;AACK;AACzC;AACP,uBAAuB,4DAAU,4DAA4D;AAC7F,uCAAuC;AACvC,eAAe,mDAAU,qCAAqC,kDAAkD;AAChH;AACA;;;;;;;;;;;;;;;ACP2C;AACkB;AACX;AACL;AACtC;AACP,8BAA8B;AAC9B,gCAAgC,YAAY,mDAAc;AAC1D;AACA;AACA,YAAY,8DAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAU;AACzB,kBAAkB,yDAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;ACnC8C;AACH;AACH;AACgB;AACxB;AAC2C;AAC1B;AAC1C;AACP;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,yBAAyB,6DAAiB;AAC1C,kBAAkB,oEAAc;AAChC;AACA,cAAc,mDAAU;AACxB,oDAAoD,YAAY;AAChE,sDAAsD,eAAe;AACrE;AACA;AACA,aAAa;AACb;AACA,gBAAgB,qDAAS,iCAAiC,uFAAwB;AAClF;AACA,0DAA0D,uBAAuB;AACjF,qEAAqE,wBAAwB;AAC7F,sFAAsF,oDAAa,KAAK,6CAAM;AAC9G,gEAAgE,wCAAwC;AACxG;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,sCAAsC,oDAAoD;AAC1F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,UAAU,yCAAK;AACf;AACA;;;;;;;;;;;;;;AC7CuC;AACa;AACY;AACzD;AACP,WAAW,mDAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA;AACA,gBAAgB,gEAAS,0DAA0D,6EAAwB;AAC3G;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;ACpCoD;AACpB;AACY;AACrC;AACP,gCAAgC,YAAY,4DAAc;AAC1D,WAAW,6CAAK,eAAe,OAAO,wDAAK,wBAAwB;AACnE;AACA;;;;;;;;;;;;;;;ACPuC;AACH;AAC4B;AACZ;AAC7C;AACP,WAAW,mDAAO;AAClB;AACA,yBAAyB,6EAAwB,gCAAgC,mCAAmC;AACpH;AACA;AACA,SAAS;AACT,QAAQ,gEAAS,4BAA4B,6EAAwB;AACrE;AACA;AACA;AACA,SAAS,EAAE,4CAAI;AACf;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACrBiC;AACM;AACyB;AAClB;AACvC;AACP,uCAAuC;AACvC;AACA,WAAW,mDAAO;AAClB;AACA;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,+CAAQ,2CAA2C,mBAAmB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,wCAAwC,+CAAQ,wCAAwC,kBAAkB;AAC1G;AACA,wBAAwB,0DAAS;AACjC;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,SAAS;AACT;AACA;AACA,qCAAqC,+CAAQ,2CAA2C,mBAAmB;AAC3G;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;ACtEiC;AACc;AACR;AACyB;AAClB;AACM;AACR;AACc;AACnD;AACP;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,0BAA0B,wDAAY,8CAA8C,4DAAc;AAClG;AACA;AACA,WAAW,mDAAO;AAClB;AACA;AACA;AACA;AACA;AACA,YAAY,0DAA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AAClB;AACA,QAAQ,gEAAS,UAAU,8EAAgB;AAC3C;AACA,KAAK;AACL;AACA;;;;;;;;;;;;AChBkC;AAC3B;AACP,WAAW,+CAAM,8BAA8B,iEAAiE;AAChH;AACA;;;;;;;;;;;;;;;ACJuC;AACH;AAC4B;AACZ;AAC7C;AACP,WAAW,mDAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA;AACA,iCAAiC,6EAAwB,mBAAmB,4CAAI;AAChF,YAAY,gEAAS;AACrB,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;ACjCoD;AACb;AACyB;AACzD;AACP,gCAAgC,YAAY,4DAAc;AAC1D,WAAW,mDAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;AC3CuC;AACyB;AACzD;AACP,WAAW,mDAAO;AAClB;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;AChBoD;AACZ;AACI;AACrC;AACP,gCAAgC,YAAY,4DAAc;AAC1D,mBAAmB,wDAAK;AACxB,WAAW,qDAAS,eAAe,kBAAkB;AACrD;AACA;;;;;;;;;;;;;;;;;ACR8C;AAChB;AACoB;AAClB;AACM;AACc;AAC7C;AACP;AACA;AACA,mBAAmB,0DAAM,wBAAwB,2CAAI,KAAK,+DAAc;AACxE;AACA;AACA,WAAW,mDAAQ,2BAA2B,OAAO,gEAAS,2CAA2C,2CAAI,KAAK,6CAAK,WAAW;AAClI;AACA;;;;;;;;;;;;;;ACdsD;AACf;AACyB;AACzD;AACP,WAA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AAC,oDAAa,WAAW,6CAAM;AACnD,SAAS;AACT;AACA;;;;;;;;;;;;;ACfgD;AACT;AAChC;AACP,WAAW,mDAAO,CAAC,6DAAa;AAChC;AACA;;;;;;;;;;;;;ACLuC;AACyB;AACzD;AACP,WAAW,mDAAO;AAClB;AACA;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;ACzB4C;AACL;AACyB;AACZ;AACR;AACrC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO,oDAAK;AACpC,UAAU,mDAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,wDAAK,UAAU,gEAAS;AACvF,+CAA+C,6EAAwB;AACvE;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,6EAAwB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;AC3DoD;AACf;AACE;AACyB;AACzD;AACP,WAAW,mDAAO;AAClB;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,mCAAmC,6CAAO;AAC1C,gBAAgB,gEAAS,mCAAmC,6EAAwB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,wCAAwC,6EAAwB;AAChE;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;AC7CuC;AACyB;AACpB;AACA;AACQ;AAC7C;AACP,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,oDAAQ;AAClB,UAAU,mDAAO;AACjB;AACA;AACA;AACA;AACA,4CAA4C,6EAAwB;AACpE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,wDAAK,UAAU,gEAAS;AAC/F,uDAAuD,6EAAwB;AAC/E;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;ACpEoD;AACf;AACE;AACyB;AACzD;AACP,WAAW,mDAAO;AAClB;AACA;AACA;AACA;AACA,wCAAwC,6EAAwB;AAChE;AACA,kCAAkC,6CAAO;AACzC,oBAAoB,gEAAS,8BAA8B,6EAAwB;AACnF;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;AC/BoD;AACb;AACH;AAC4B;AACzD;AACP,WAAW,mDAAO;AAClB;AACA;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA,SAAS;AACT,QAAQ,gEAAS,qBAAqB,6EAAwB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE,4CAAI;AACf,KAAK;AACL;AACA;;;;;;;;;;;;;;ACtBoD;AAClB;AACgB;AAC3C;AACP,gCAAgC,YAAY,4DAAc;AAC1D,WAAW,+CAAM,CAAC,8DAAQ;AAC1B;AACA;;;;;;;;;;;;;;ACPuC;AACyB;AACZ;AAC7C;AACP,iCAAiC,+BAA+B;AAChE,WAAW,mDAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,6EAAwB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,QAAQ,gEAAS;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvCgD;AACM;AACA;AACf;AACyB;AACzD;AACP,WAAW,mDAAO;AAClB;AACA;AACA;AACA;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA,iDAAiD,8DAAa;AAC9D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iDAAiD,8DAAa,6BAA6B,wDAAU;AACrG;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;AC7BkC;AAC3B;AACP,WAAW,+CAAM,uBAAuB,wBAAwB;AAChE;AACA;;;;;;;;;;;;;;ACJ4C;AACL;AACyB;AACzD;AACP;AACA;AACA,YAAY,oDAAQ;AACpB,UAAU,mDAAO;AACjB;AACA;AACA,6BAA6B,6EAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;AC3BuC;AACyB;AACzD;AACP,WAAW,mDAAO;AAClB;AACA;AACA,yBAAyB,6EAAwB,gCAAgC,qFAAqF;AACtK,KAAK;AACL;AACA;;;;;;;;;;;;;ACTwC;AACI;AACrC;AACP,WAAW,qDAAS,CAAC,oDAAQ;AAC7B;AACA;;;;;;;;;;;;;ACLwC;AACQ;AACzC;AACP,WAAW,4DAAU,mBAAmB,qDAAS,eAAe,yBAAyB,oBAAoB,qDAAS,eAAe,yBAAyB;AAC9J;AACA;;;;;;;;;;;;;ACLwC;AACD;AAChC;AACP,WAAW,mDAAO;AAClB;AACA,QAAQ,qDAAS,2BAA2B,0CAA0C,6BAA6B,4CAA4C;AAC/J;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACXiC;AACW;AACL;AACyB;AACzD;AACP;AACA,wBAAwB,OAAO,oDAAK;AACpC,UAAU,mDAAO;AACjB;AACA,6BAA6B,6EAAwB;AACrD;AACA;AACA,aAAa;AACb;AACA;AACA,wCAAwC,+CAAQ,wCAAwC,kBAAkB;AAC1G;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;;;;;;;;;;;;;ACjCuC;AACyB;AACzD;AACP,gCAAgC;AAChC,WAAW,mDAAO;AAClB;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACbgD;AACT;AACyB;AACpB;AACrC;AACP,sBAAsB,4DAAU;AAChC;AACA,cAAc;AACd;AACA;AACA,UAAU,mDAAO;AACjB;AACA;AACA;AACA,6BAA6B,6EAAwB;AACrD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,YAAY,oDAAQ;AACpB;AACA;;;;;;;;;;;;;;ACvCuC;AACyB;AACZ;AAC7C;AACP,WAAW,mDAAO;AAClB,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gEAAS,oCAAoC,6EAAwB;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;AC5CoD;AACd;AACM;AACrC;AACP,gCAAgC,YAAY,4DAAc;AAC1D,oBAAoB,wDAAK;AACzB,WAAW,mDAAQ,eAAe,mBAAmB;AACrD;AACA;;;;;;;;;;;;;;ACRgD;AACT;AACyB;AACzD;AACP,mCAAmC;AACnC,WAAW,mDAAO;AAClB;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA,SAAS,gBAAgB,+EAA+E;AACxG,KAAK;AACL;AACA;AACA,eAAe,wDAAU;AACzB;AACA;;;;;;;;;;;;;;;AChBoD;AACb;AACyB;AACzD;AACP,gCAAgC,YAAY,4DAAc;AAC1D,WAAW,mDAAO;AAClB;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACuB;AACxB;;;;;;;;;;;;;;ACvB2C;AACE;AACT;AAC7B;AACP;AACA;AACA;AACA,yEAAyE,mDAAK;AAC9E,QAAQ,yDAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iDAAO;AAClB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AC9B2E;AAC/C;AACrB;AACP,wCAAwC,oBAAoB,mFAAqB;AACjF,WAAW,yCAAG,oBAAoB,UAAU,kDAAkD,IAAI;AAClG;AACA;;;;;;;;;;;;;ACNkC;AACK;AACvC,yCAAyC;AAClC;AACP,WAAW,mDAAO;AAClB,QAAQ,+CAAM;AACd,KAAK;AACL;AACA;;;;;;;;;;;;;;;;ACRqC;AACE;AACyB;AAC5B;AACgB;AAC7C;AACP,WAAW,mDAAO;AAClB,gCAAgC,6CAAO;AACvC;AACA;AACA;AACA;AACA;AACA,yBAAyB,6EAAwB,gCAAgC,iGAAiG;AAClL;AACA;AACA,SAAS;AACT,QAAQ,gEAAS,6BAA6B,6EAAwB;AACtE;AACA,iDAAiD,6CAAO;AACxD,SAAS,EAAE,4CAAI;AACf;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;AC3BiC;AACI;AACE;AACyB;AACzD;AACP,uCAAuC;AACvC;AACA,WAAW,mDAAO;AAClB,2BAA2B,6CAAO;AAClC;AACA;AACA;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA,qCAAqC,+CAAQ,2CAA2C,mBAAmB;AAC3G;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,6CAAO;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;ACpDqC;AACe;AACL;AACR;AACyB;AAClB;AACF;AACc;AACnD;AACP;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,0BAA0B,wDAAY,8CAA8C,4DAAc;AAClG;AACA;AACA,WAAW,mDAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAS;AACrB;AACA;AACA;AACA;AACA,+BAA+B,uDAAY;AAC3C;AACA,mCAAmC,6CAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sEAAe,gCAAgC,+BAA+B;AAC9F;AACA;AACA;AACA,YAAY,sEAAe;AAC3B;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA;AACA,aAAa;AACb,SAAS,gBAAgB,uCAAuC,6BAA6B,IAAI,mBAAmB,uCAAuC,6BAA6B,IAAI;AAC5L;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;ACrEiC;AACI;AACU;AACR;AACa;AACY;AAC5B;AACU;AACvC;AACP,WAAW,mDAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAS,qBAAqB,6EAAwB;AAC9D,6BAA6B,6CAAO;AACpC;AACA,0CAA0C,uDAAY;AACtD;AACA,gBAAgB,0DAAS;AACzB;AACA;AACA;AACA;AACA;AACA,kCAAkC,gEAAS;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,6EAAwB,0BAA0B,4CAAI;AACpH,SAAS,EAAE,4CAAI;AACf,yBAAyB,6EAAwB;AACjD;AACA;AACA;AACA,yCAAyC,+CAAQ,uDAAuD,uBAAuB;AAC/H;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACjEqC;AACE;AACyB;AACZ;AAC7C;AACP,WAAW,mDAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6CAAO;AAChC;AACA;AACA;AACA,kCAAkC,gEAAS;AAC3C;AACA;AACA;AACA;AACA;AACA,2DAA2D,6EAAwB;AACnF;AACA;AACA,yBAAyB,6EAAwB,gCAAgC,4BAA4B;AAC7G;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;ACrC8C;AACO;AACd;AAChC;AACP;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,WAAW,mDAAO;AAClB,QAAQ,sDAAe,SAAS,oDAAa,WAAW,6CAAM;AAC9D,KAAK;AACL;AACA;;;;;;;;;;;;;ACZwC;AACc;AAC/C;AACP,WAAW,mEAAgB,CAAC,gDAAG;AAC/B;AACA;;;;;;;;;;;;;ACL8C;AAClB;AACrB;AACP;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,WAAW,2CAAS,SAAS,oDAAa,KAAK,6CAAM;AACrD;AACA;;;;;;;;;;;;ACTsD;AAC/C,8BAA8B,mEAAgB;AACrD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;ACRsD;AAC/C,oBAAoB,mEAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;ACRsD;AAC/C,oBAAoB,mEAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACRA;AACA;AACO;AACP;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,gDAAgD,sBAAsB;AACtE;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrBA;AACO;AACP;AACA;AACA;;;;;;;;;;;ACJO;AACP,mDAAmD,6CAA6C,IAAI;AACpG;AACA;;;;;;;;;;;ACHO;AACP,qCAAqC;AACrC;AACA","sources":["webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/AsyncSubject.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/Notification.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/observable/ConnectableObservable.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/observable/fromSubscribable.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/observable/interval.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/observable/onErrorResumeNext.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/observable/race.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/observable/throwError.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/observable/timer.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/observable/zip.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/audit.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/auditTime.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/buffer.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/bufferCount.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/bufferTime.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/bufferToggle.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/bufferWhen.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/catchError.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/combineAll.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/combineLatest.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/combineLatestAll.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/combineLatestWith.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/concat.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/concatMap.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/concatMapTo.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/concatWith.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/connect.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/count.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/debounce.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/defaultIfEmpty.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/delay.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/delayWhen.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/dematerialize.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/distinct.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/elementAt.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/endWith.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/every.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/exhaust.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/exhaustAll.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/exhaustMap.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/expand.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/find.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/findIndex.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/first.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/flatMap.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/groupBy.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/ignoreElements.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/isEmpty.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/joinAllInternals.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/last.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/materialize.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/max.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/merge.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/mergeMapTo.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/mergeScan.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/mergeWith.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/min.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/multicast.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/onErrorResumeNextWith.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/pairwise.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/publish.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/publishBehavior.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/publishLast.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/publishReplay.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/raceWith.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/reduce.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/refCount.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/repeat.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/repeatWhen.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/retry.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/retryWhen.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/sample.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/sampleTime.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/sequenceEqual.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/single.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/skip.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/skipLast.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/skipWhile.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/switchAll.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/switchMapTo.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/switchScan.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/takeLast.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/takeWhile.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/tap.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/throttle.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/throttleTime.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/throwIfEmpty.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/timeInterval.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/timeoutWith.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/timestamp.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/toArray.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/window.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/windowCount.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/windowTime.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/windowToggle.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/windowWhen.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/zip.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/zipAll.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/operators/zipWith.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/util/ArgumentOutOfRangeError.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/util/NotFoundError.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/util/SequenceError.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/util/argsArgArrayOrObject.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/util/argsOrArgArray.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/util/createObject.js","webpack:///../../uiweb/node_modules/rxjs/dist/esm5/internal/util/not.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { Subject } from './Subject';\nvar AsyncSubject = (function (_super) {\n    __extends(AsyncSubject, _super);\n    function AsyncSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._value = null;\n        _this._hasValue = false;\n        _this._isComplete = false;\n        return _this;\n    }\n    AsyncSubject.prototype._checkFinalizedStatuses = function (subscriber) {\n        var _a = this, hasError = _a.hasError, _hasValue = _a._hasValue, _value = _a._value, thrownError = _a.thrownError, isStopped = _a.isStopped, _isComplete = _a._isComplete;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped || _isComplete) {\n            _hasValue && subscriber.next(_value);\n            subscriber.complete();\n        }\n    };\n    AsyncSubject.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._value = value;\n            this._hasValue = true;\n        }\n    };\n    AsyncSubject.prototype.complete = function () {\n        var _a = this, _hasValue = _a._hasValue, _value = _a._value, _isComplete = _a._isComplete;\n        if (!_isComplete) {\n            this._isComplete = true;\n            _hasValue && _super.prototype.next.call(this, _value);\n            _super.prototype.complete.call(this);\n        }\n    };\n    return AsyncSubject;\n}(Subject));\nexport { AsyncSubject };\n//# sourceMappingURL=AsyncSubject.js.map","import { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\nexport var NotificationKind;\n(function (NotificationKind) {\n    NotificationKind[\"NEXT\"] = \"N\";\n    NotificationKind[\"ERROR\"] = \"E\";\n    NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (NotificationKind = {}));\nvar Notification = (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    Notification.prototype.observe = function (observer) {\n        return observeNotification(this, observer);\n    };\n    Notification.prototype.do = function (nextHandler, errorHandler, completeHandler) {\n        var _a = this, kind = _a.kind, value = _a.value, error = _a.error;\n        return kind === 'N' ? nextHandler === null || nextHandler === void 0 ? void 0 : nextHandler(value) : kind === 'E' ? errorHandler === null || errorHandler === void 0 ? void 0 : errorHandler(error) : completeHandler === null || completeHandler === void 0 ? void 0 : completeHandler();\n    };\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        var _a;\n        return isFunction((_a = nextOrObserver) === null || _a === void 0 ? void 0 : _a.next)\n            ? this.observe(nextOrObserver)\n            : this.do(nextOrObserver, error, complete);\n    };\n    Notification.prototype.toObservable = function () {\n        var _a = this, kind = _a.kind, value = _a.value, error = _a.error;\n        var result = kind === 'N'\n            ?\n                of(value)\n            :\n                kind === 'E'\n                    ?\n                        throwError(function () { return error; })\n                    :\n                        kind === 'C'\n                            ?\n                                EMPTY\n                            :\n                                0;\n        if (!result) {\n            throw new TypeError(\"Unexpected notification kind \" + kind);\n        }\n        return result;\n    };\n    Notification.createNext = function (value) {\n        return new Notification('N', value);\n    };\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    return Notification;\n}());\nexport { Notification };\nexport function observeNotification(notification, observer) {\n    var _a, _b, _c;\n    var _d = notification, kind = _d.kind, value = _d.value, error = _d.error;\n    if (typeof kind !== 'string') {\n        throw new TypeError('Invalid notification, missing \"kind\"');\n    }\n    kind === 'N' ? (_a = observer.next) === null || _a === void 0 ? void 0 : _a.call(observer, value) : kind === 'E' ? (_b = observer.error) === null || _b === void 0 ? void 0 : _b.call(observer, error) : (_c = observer.complete) === null || _c === void 0 ? void 0 : _c.call(observer);\n}\n//# sourceMappingURL=Notification.js.map","import { __extends } from \"tslib\";\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { hasLift } from '../util/lift';\nvar ConnectableObservable = (function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subjectFactory = subjectFactory;\n        _this._subject = null;\n        _this._refCount = 0;\n        _this._connection = null;\n        if (hasLift(source)) {\n            _this.lift = source.lift;\n        }\n        return _this;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype._teardown = function () {\n        this._refCount = 0;\n        var _connection = this._connection;\n        this._subject = this._connection = null;\n        _connection === null || _connection === void 0 ? void 0 : _connection.unsubscribe();\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var _this = this;\n        var connection = this._connection;\n        if (!connection) {\n            connection = this._connection = new Subscription();\n            var subject_1 = this.getSubject();\n            connection.add(this.source.subscribe(createOperatorSubscriber(subject_1, undefined, function () {\n                _this._teardown();\n                subject_1.complete();\n            }, function (err) {\n                _this._teardown();\n                subject_1.error(err);\n            }, function () { return _this._teardown(); })));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return higherOrderRefCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable));\nexport { ConnectableObservable };\n//# sourceMappingURL=ConnectableObservable.js.map","import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function combineLatest() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(args);\n    var resultSelector = popResultSelector(args);\n    var _a = argsArgArrayOrObject(args), observables = _a.args, keys = _a.keys;\n    if (observables.length === 0) {\n        return from([], scheduler);\n    }\n    var result = new Observable(combineLatestInit(observables, scheduler, keys\n        ?\n            function (values) { return createObject(keys, values); }\n        :\n            identity));\n    return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\nexport function combineLatestInit(observables, scheduler, valueTransform) {\n    if (valueTransform === void 0) { valueTransform = identity; }\n    return function (subscriber) {\n        maybeSchedule(scheduler, function () {\n            var length = observables.length;\n            var values = new Array(length);\n            var active = length;\n            var remainingFirstValues = length;\n            var _loop_1 = function (i) {\n                maybeSchedule(scheduler, function () {\n                    var source = from(observables[i], scheduler);\n                    var hasFirstValue = false;\n                    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n                        values[i] = value;\n                        if (!hasFirstValue) {\n                            hasFirstValue = true;\n                            remainingFirstValues--;\n                        }\n                        if (!remainingFirstValues) {\n                            subscriber.next(valueTransform(values.slice()));\n                        }\n                    }, function () {\n                        if (!--active) {\n                            subscriber.complete();\n                        }\n                    }));\n                }, subscriber);\n            };\n            for (var i = 0; i < length; i++) {\n                _loop_1(i);\n            }\n        }, subscriber);\n    };\n}\nfunction maybeSchedule(scheduler, execute, subscription) {\n    if (scheduler) {\n        executeSchedule(subscription, scheduler, execute);\n    }\n    else {\n        execute();\n    }\n}\n//# sourceMappingURL=combineLatest.js.map","import { Observable } from '../Observable';\nexport function fromSubscribable(subscribable) {\n    return new Observable(function (subscriber) { return subscribable.subscribe(subscriber); });\n}\n//# sourceMappingURL=fromSubscribable.js.map","import { asyncScheduler } from '../scheduler/async';\nimport { timer } from './timer';\nexport function interval(period, scheduler) {\n    if (period === void 0) { period = 0; }\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    if (period < 0) {\n        period = 0;\n    }\n    return timer(period, period, scheduler);\n}\n//# sourceMappingURL=interval.js.map","import { Observable } from '../Observable';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from './innerFrom';\nexport function onErrorResumeNext() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    var nextSources = argsOrArgArray(sources);\n    return new Observable(function (subscriber) {\n        var sourceIndex = 0;\n        var subscribeNext = function () {\n            if (sourceIndex < nextSources.length) {\n                var nextSource = void 0;\n                try {\n                    nextSource = innerFrom(nextSources[sourceIndex++]);\n                }\n                catch (err) {\n                    subscribeNext();\n                    return;\n                }\n                var innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\n                nextSource.subscribe(innerSubscriber);\n                innerSubscriber.add(subscribeNext);\n            }\n            else {\n                subscriber.complete();\n            }\n        };\n        subscribeNext();\n    });\n}\n//# sourceMappingURL=onErrorResumeNext.js.map","import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nexport function race() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    sources = argsOrArgArray(sources);\n    return sources.length === 1 ? innerFrom(sources[0]) : new Observable(raceInit(sources));\n}\nexport function raceInit(sources) {\n    return function (subscriber) {\n        var subscriptions = [];\n        var _loop_1 = function (i) {\n            subscriptions.push(innerFrom(sources[i]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n                if (subscriptions) {\n                    for (var s = 0; s < subscriptions.length; s++) {\n                        s !== i && subscriptions[s].unsubscribe();\n                    }\n                    subscriptions = null;\n                }\n                subscriber.next(value);\n            })));\n        };\n        for (var i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n            _loop_1(i);\n        }\n    };\n}\n//# sourceMappingURL=race.js.map","import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nexport function throwError(errorOrErrorFactory, scheduler) {\n    var errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : function () { return errorOrErrorFactory; };\n    var init = function (subscriber) { return subscriber.error(errorFactory()); };\n    return new Observable(scheduler ? function (subscriber) { return scheduler.schedule(init, 0, subscriber); } : init);\n}\n//# sourceMappingURL=throwError.js.map","import { Observable } from '../Observable';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\nexport function timer(dueTime, intervalOrScheduler, scheduler) {\n    if (dueTime === void 0) { dueTime = 0; }\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    var intervalDuration = -1;\n    if (intervalOrScheduler != null) {\n        if (isScheduler(intervalOrScheduler)) {\n            scheduler = intervalOrScheduler;\n        }\n        else {\n            intervalDuration = intervalOrScheduler;\n        }\n    }\n    return new Observable(function (subscriber) {\n        var due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n        if (due < 0) {\n            due = 0;\n        }\n        var n = 0;\n        return scheduler.schedule(function () {\n            if (!subscriber.closed) {\n                subscriber.next(n++);\n                if (0 <= intervalDuration) {\n                    this.schedule(undefined, intervalDuration);\n                }\n                else {\n                    subscriber.complete();\n                }\n            }\n        }, due);\n    });\n}\n//# sourceMappingURL=timer.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { EMPTY } from './empty';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { popResultSelector } from '../util/args';\nexport function zip() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var resultSelector = popResultSelector(args);\n    var sources = argsOrArgArray(args);\n    return sources.length\n        ? new Observable(function (subscriber) {\n            var buffers = sources.map(function () { return []; });\n            var completed = sources.map(function () { return false; });\n            subscriber.add(function () {\n                buffers = completed = null;\n            });\n            var _loop_1 = function (sourceIndex) {\n                innerFrom(sources[sourceIndex]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n                    buffers[sourceIndex].push(value);\n                    if (buffers.every(function (buffer) { return buffer.length; })) {\n                        var result = buffers.map(function (buffer) { return buffer.shift(); });\n                        subscriber.next(resultSelector ? resultSelector.apply(void 0, __spreadArray([], __read(result))) : result);\n                        if (buffers.some(function (buffer, i) { return !buffer.length && completed[i]; })) {\n                            subscriber.complete();\n                        }\n                    }\n                }, function () {\n                    completed[sourceIndex] = true;\n                    !buffers[sourceIndex].length && subscriber.complete();\n                }));\n            };\n            for (var sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) {\n                _loop_1(sourceIndex);\n            }\n            return function () {\n                buffers = completed = null;\n            };\n        })\n        : EMPTY;\n}\n//# sourceMappingURL=zip.js.map","import { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function audit(durationSelector) {\n    return operate(function (source, subscriber) {\n        var hasValue = false;\n        var lastValue = null;\n        var durationSubscriber = null;\n        var isComplete = false;\n        var endDuration = function () {\n            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n            durationSubscriber = null;\n            if (hasValue) {\n                hasValue = false;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n            isComplete && subscriber.complete();\n        };\n        var cleanupDuration = function () {\n            durationSubscriber = null;\n            isComplete && subscriber.complete();\n        };\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            hasValue = true;\n            lastValue = value;\n            if (!durationSubscriber) {\n                innerFrom(durationSelector(value)).subscribe((durationSubscriber = createOperatorSubscriber(subscriber, endDuration, cleanupDuration)));\n            }\n        }, function () {\n            isComplete = true;\n            (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();\n        }));\n    });\n}\n//# sourceMappingURL=audit.js.map","import { asyncScheduler } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nexport function auditTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return audit(function () { return timer(duration, scheduler); });\n}\n//# sourceMappingURL=auditTime.js.map","import { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function buffer(closingNotifier) {\n    return operate(function (source, subscriber) {\n        var currentBuffer = [];\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return currentBuffer.push(value); }, function () {\n            subscriber.next(currentBuffer);\n            subscriber.complete();\n        }));\n        innerFrom(closingNotifier).subscribe(createOperatorSubscriber(subscriber, function () {\n            var b = currentBuffer;\n            currentBuffer = [];\n            subscriber.next(b);\n        }, noop));\n        return function () {\n            currentBuffer = null;\n        };\n    });\n}\n//# sourceMappingURL=buffer.js.map","import { __values } from \"tslib\";\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nexport function bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\n    startBufferEvery = startBufferEvery !== null && startBufferEvery !== void 0 ? startBufferEvery : bufferSize;\n    return operate(function (source, subscriber) {\n        var buffers = [];\n        var count = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var e_1, _a, e_2, _b;\n            var toEmit = null;\n            if (count++ % startBufferEvery === 0) {\n                buffers.push([]);\n            }\n            try {\n                for (var buffers_1 = __values(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {\n                    var buffer = buffers_1_1.value;\n                    buffer.push(value);\n                    if (bufferSize <= buffer.length) {\n                        toEmit = toEmit !== null && toEmit !== void 0 ? toEmit : [];\n                        toEmit.push(buffer);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (toEmit) {\n                try {\n                    for (var toEmit_1 = __values(toEmit), toEmit_1_1 = toEmit_1.next(); !toEmit_1_1.done; toEmit_1_1 = toEmit_1.next()) {\n                        var buffer = toEmit_1_1.value;\n                        arrRemove(buffers, buffer);\n                        subscriber.next(buffer);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (toEmit_1_1 && !toEmit_1_1.done && (_b = toEmit_1.return)) _b.call(toEmit_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }, function () {\n            var e_3, _a;\n            try {\n                for (var buffers_2 = __values(buffers), buffers_2_1 = buffers_2.next(); !buffers_2_1.done; buffers_2_1 = buffers_2.next()) {\n                    var buffer = buffers_2_1.value;\n                    subscriber.next(buffer);\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (buffers_2_1 && !buffers_2_1.done && (_a = buffers_2.return)) _a.call(buffers_2);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            subscriber.complete();\n        }, undefined, function () {\n            buffers = null;\n        }));\n    });\n}\n//# sourceMappingURL=bufferCount.js.map","import { __values } from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function bufferTime(bufferTimeSpan) {\n    var _a, _b;\n    var otherArgs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherArgs[_i - 1] = arguments[_i];\n    }\n    var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n    var bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n    var maxBufferSize = otherArgs[1] || Infinity;\n    return operate(function (source, subscriber) {\n        var bufferRecords = [];\n        var restartOnEmit = false;\n        var emit = function (record) {\n            var buffer = record.buffer, subs = record.subs;\n            subs.unsubscribe();\n            arrRemove(bufferRecords, record);\n            subscriber.next(buffer);\n            restartOnEmit && startBuffer();\n        };\n        var startBuffer = function () {\n            if (bufferRecords) {\n                var subs = new Subscription();\n                subscriber.add(subs);\n                var buffer = [];\n                var record_1 = {\n                    buffer: buffer,\n                    subs: subs,\n                };\n                bufferRecords.push(record_1);\n                executeSchedule(subs, scheduler, function () { return emit(record_1); }, bufferTimeSpan);\n            }\n        };\n        if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n            executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n        }\n        else {\n            restartOnEmit = true;\n        }\n        startBuffer();\n        var bufferTimeSubscriber = createOperatorSubscriber(subscriber, function (value) {\n            var e_1, _a;\n            var recordsCopy = bufferRecords.slice();\n            try {\n                for (var recordsCopy_1 = __values(recordsCopy), recordsCopy_1_1 = recordsCopy_1.next(); !recordsCopy_1_1.done; recordsCopy_1_1 = recordsCopy_1.next()) {\n                    var record = recordsCopy_1_1.value;\n                    var buffer = record.buffer;\n                    buffer.push(value);\n                    maxBufferSize <= buffer.length && emit(record);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (recordsCopy_1_1 && !recordsCopy_1_1.done && (_a = recordsCopy_1.return)) _a.call(recordsCopy_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }, function () {\n            while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {\n                subscriber.next(bufferRecords.shift().buffer);\n            }\n            bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();\n            subscriber.complete();\n            subscriber.unsubscribe();\n        }, undefined, function () { return (bufferRecords = null); });\n        source.subscribe(bufferTimeSubscriber);\n    });\n}\n//# sourceMappingURL=bufferTime.js.map","import { __values } from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\nexport function bufferToggle(openings, closingSelector) {\n    return operate(function (source, subscriber) {\n        var buffers = [];\n        innerFrom(openings).subscribe(createOperatorSubscriber(subscriber, function (openValue) {\n            var buffer = [];\n            buffers.push(buffer);\n            var closingSubscription = new Subscription();\n            var emitBuffer = function () {\n                arrRemove(buffers, buffer);\n                subscriber.next(buffer);\n                closingSubscription.unsubscribe();\n            };\n            closingSubscription.add(innerFrom(closingSelector(openValue)).subscribe(createOperatorSubscriber(subscriber, emitBuffer, noop)));\n        }, noop));\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var e_1, _a;\n            try {\n                for (var buffers_1 = __values(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {\n                    var buffer = buffers_1_1.value;\n                    buffer.push(value);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }, function () {\n            while (buffers.length > 0) {\n                subscriber.next(buffers.shift());\n            }\n            subscriber.complete();\n        }));\n    });\n}\n//# sourceMappingURL=bufferToggle.js.map","import { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function bufferWhen(closingSelector) {\n    return operate(function (source, subscriber) {\n        var buffer = null;\n        var closingSubscriber = null;\n        var openBuffer = function () {\n            closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();\n            var b = buffer;\n            buffer = [];\n            b && subscriber.next(b);\n            innerFrom(closingSelector()).subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openBuffer, noop)));\n        };\n        openBuffer();\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return buffer === null || buffer === void 0 ? void 0 : buffer.push(value); }, function () {\n            buffer && subscriber.next(buffer);\n            subscriber.complete();\n        }, undefined, function () { return (buffer = closingSubscriber = null); }));\n    });\n}\n//# sourceMappingURL=bufferWhen.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\nexport function catchError(selector) {\n    return operate(function (source, subscriber) {\n        var innerSub = null;\n        var syncUnsub = false;\n        var handledResult;\n        innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, undefined, function (err) {\n            handledResult = innerFrom(selector(err, catchError(selector)(source)));\n            if (innerSub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                handledResult.subscribe(subscriber);\n            }\n            else {\n                syncUnsub = true;\n            }\n        }));\n        if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            handledResult.subscribe(subscriber);\n        }\n    });\n}\n//# sourceMappingURL=catchError.js.map","import { combineLatestAll } from './combineLatestAll';\nexport var combineAll = combineLatestAll;\n//# sourceMappingURL=combineAll.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { combineLatestInit } from '../observable/combineLatest';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\nexport function combineLatest() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var resultSelector = popResultSelector(args);\n    return resultSelector\n        ? pipe(combineLatest.apply(void 0, __spreadArray([], __read(args))), mapOneOrManyArgs(resultSelector))\n        : operate(function (source, subscriber) {\n            combineLatestInit(__spreadArray([source], __read(argsOrArgArray(args))))(subscriber);\n        });\n}\n//# sourceMappingURL=combineLatest.js.map","import { combineLatest } from '../observable/combineLatest';\nimport { joinAllInternals } from './joinAllInternals';\nexport function combineLatestAll(project) {\n    return joinAllInternals(combineLatest, project);\n}\n//# sourceMappingURL=combineLatestAll.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { combineLatest } from './combineLatest';\nexport function combineLatestWith() {\n    var otherSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        otherSources[_i] = arguments[_i];\n    }\n    return combineLatest.apply(void 0, __spreadArray([], __read(otherSources)));\n}\n//# sourceMappingURL=combineLatestWith.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { operate } from '../util/lift';\nimport { concatAll } from './concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from '../observable/from';\nexport function concat() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(args);\n    return operate(function (source, subscriber) {\n        concatAll()(from(__spreadArray([source], __read(args)), scheduler)).subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=concat.js.map","import { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\nexport function concatMap(project, resultSelector) {\n    return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n//# sourceMappingURL=concatMap.js.map","import { concatMap } from './concatMap';\nimport { isFunction } from '../util/isFunction';\nexport function concatMapTo(innerObservable, resultSelector) {\n    return isFunction(resultSelector) ? concatMap(function () { return innerObservable; }, resultSelector) : concatMap(function () { return innerObservable; });\n}\n//# sourceMappingURL=concatMapTo.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { concat } from './concat';\nexport function concatWith() {\n    var otherSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        otherSources[_i] = arguments[_i];\n    }\n    return concat.apply(void 0, __spreadArray([], __read(otherSources)));\n}\n//# sourceMappingURL=concatWith.js.map","import { Subject } from '../Subject';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { fromSubscribable } from '../observable/fromSubscribable';\nvar DEFAULT_CONFIG = {\n    connector: function () { return new Subject(); },\n};\nexport function connect(selector, config) {\n    if (config === void 0) { config = DEFAULT_CONFIG; }\n    var connector = config.connector;\n    return operate(function (source, subscriber) {\n        var subject = connector();\n        innerFrom(selector(fromSubscribable(subject))).subscribe(subscriber);\n        subscriber.add(source.subscribe(subject));\n    });\n}\n//# sourceMappingURL=connect.js.map","import { reduce } from './reduce';\nexport function count(predicate) {\n    return reduce(function (total, value, i) { return (!predicate || predicate(value, i) ? total + 1 : total); }, 0);\n}\n//# sourceMappingURL=count.js.map","import { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function debounce(durationSelector) {\n    return operate(function (source, subscriber) {\n        var hasValue = false;\n        var lastValue = null;\n        var durationSubscriber = null;\n        var emit = function () {\n            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n            durationSubscriber = null;\n            if (hasValue) {\n                hasValue = false;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n            hasValue = true;\n            lastValue = value;\n            durationSubscriber = createOperatorSubscriber(subscriber, emit, noop);\n            innerFrom(durationSelector(value)).subscribe(durationSubscriber);\n        }, function () {\n            emit();\n            subscriber.complete();\n        }, undefined, function () {\n            lastValue = durationSubscriber = null;\n        }));\n    });\n}\n//# sourceMappingURL=debounce.js.map","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return operate(function (source, subscriber) {\n        var activeTask = null;\n        var lastValue = null;\n        var lastTime = null;\n        var emit = function () {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            var targetTime = lastTime + dueTime;\n            var now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, function () {\n            emit();\n            subscriber.complete();\n        }, undefined, function () {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n//# sourceMappingURL=debounceTime.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function defaultIfEmpty(defaultValue) {\n    return operate(function (source, subscriber) {\n        var hasValue = false;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            hasValue = true;\n            subscriber.next(value);\n        }, function () {\n            if (!hasValue) {\n                subscriber.next(defaultValue);\n            }\n            subscriber.complete();\n        }));\n    });\n}\n//# sourceMappingURL=defaultIfEmpty.js.map","import { asyncScheduler } from '../scheduler/async';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\nexport function delay(due, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    var duration = timer(due, scheduler);\n    return delayWhen(function () { return duration; });\n}\n//# sourceMappingURL=delay.js.map","import { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nimport { innerFrom } from '../observable/innerFrom';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return function (source) {\n            return concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n        };\n    }\n    return mergeMap(function (value, index) { return innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)); });\n}\n//# sourceMappingURL=delayWhen.js.map","import { observeNotification } from '../Notification';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function dematerialize() {\n    return operate(function (source, subscriber) {\n        source.subscribe(createOperatorSubscriber(subscriber, function (notification) { return observeNotification(notification, subscriber); }));\n    });\n}\n//# sourceMappingURL=dematerialize.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\nexport function distinct(keySelector, flushes) {\n    return operate(function (source, subscriber) {\n        var distinctKeys = new Set();\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var key = keySelector ? keySelector(value) : value;\n            if (!distinctKeys.has(key)) {\n                distinctKeys.add(key);\n                subscriber.next(value);\n            }\n        }));\n        flushes && innerFrom(flushes).subscribe(createOperatorSubscriber(subscriber, function () { return distinctKeys.clear(); }, noop));\n    });\n}\n//# sourceMappingURL=distinct.js.map","import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\nexport function elementAt(index, defaultValue) {\n    if (index < 0) {\n        throw new ArgumentOutOfRangeError();\n    }\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) {\n        return source.pipe(filter(function (v, i) { return i === index; }), take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new ArgumentOutOfRangeError(); }));\n    };\n}\n//# sourceMappingURL=elementAt.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nexport function endWith() {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    return function (source) { return concat(source, of.apply(void 0, __spreadArray([], __read(values)))); };\n}\n//# sourceMappingURL=endWith.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function every(predicate, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            if (!predicate.call(thisArg, value, index++, source)) {\n                subscriber.next(false);\n                subscriber.complete();\n            }\n        }, function () {\n            subscriber.next(true);\n            subscriber.complete();\n        }));\n    });\n}\n//# sourceMappingURL=every.js.map","import { exhaustAll } from './exhaustAll';\nexport var exhaust = exhaustAll;\n//# sourceMappingURL=exhaust.js.map","import { exhaustMap } from './exhaustMap';\nimport { identity } from '../util/identity';\nexport function exhaustAll() {\n    return exhaustMap(identity);\n}\n//# sourceMappingURL=exhaustAll.js.map","import { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        return function (source) {\n            return source.pipe(exhaustMap(function (a, i) { return innerFrom(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); }));\n        };\n    }\n    return operate(function (source, subscriber) {\n        var index = 0;\n        var innerSub = null;\n        var isComplete = false;\n        source.subscribe(createOperatorSubscriber(subscriber, function (outerValue) {\n            if (!innerSub) {\n                innerSub = createOperatorSubscriber(subscriber, undefined, function () {\n                    innerSub = null;\n                    isComplete && subscriber.complete();\n                });\n                innerFrom(project(outerValue, index++)).subscribe(innerSub);\n            }\n        }, function () {\n            isComplete = true;\n            !innerSub && subscriber.complete();\n        }));\n    });\n}\n//# sourceMappingURL=exhaustMap.js.map","import { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nexport function expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) { concurrent = Infinity; }\n    concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;\n    return operate(function (source, subscriber) {\n        return mergeInternals(source, subscriber, project, concurrent, undefined, true, scheduler);\n    });\n}\n//# sourceMappingURL=expand.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function find(predicate, thisArg) {\n    return operate(createFind(predicate, thisArg, 'value'));\n}\nexport function createFind(predicate, thisArg, emit) {\n    var findIndex = emit === 'index';\n    return function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var i = index++;\n            if (predicate.call(thisArg, value, i, source)) {\n                subscriber.next(findIndex ? i : value);\n                subscriber.complete();\n            }\n        }, function () {\n            subscriber.next(findIndex ? -1 : undefined);\n            subscriber.complete();\n        }));\n    };\n}\n//# sourceMappingURL=find.js.map","import { operate } from '../util/lift';\nimport { createFind } from './find';\nexport function findIndex(predicate, thisArg) {\n    return operate(createFind(predicate, thisArg, 'index'));\n}\n//# sourceMappingURL=findIndex.js.map","import { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\nexport function first(predicate, defaultValue) {\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) {\n        return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); }));\n    };\n}\n//# sourceMappingURL=first.js.map","import { mergeMap } from './mergeMap';\nexport var flatMap = mergeMap;\n//# sourceMappingURL=flatMap.js.map","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber, OperatorSubscriber } from './OperatorSubscriber';\nexport function groupBy(keySelector, elementOrOptions, duration, connector) {\n    return operate(function (source, subscriber) {\n        var element;\n        if (!elementOrOptions || typeof elementOrOptions === 'function') {\n            element = elementOrOptions;\n        }\n        else {\n            (duration = elementOrOptions.duration, element = elementOrOptions.element, connector = elementOrOptions.connector);\n        }\n        var groups = new Map();\n        var notify = function (cb) {\n            groups.forEach(cb);\n            cb(subscriber);\n        };\n        var handleError = function (err) { return notify(function (consumer) { return consumer.error(err); }); };\n        var activeGroups = 0;\n        var teardownAttempted = false;\n        var groupBySourceSubscriber = new OperatorSubscriber(subscriber, function (value) {\n            try {\n                var key_1 = keySelector(value);\n                var group_1 = groups.get(key_1);\n                if (!group_1) {\n                    groups.set(key_1, (group_1 = connector ? connector() : new Subject()));\n                    var grouped = createGroupedObservable(key_1, group_1);\n                    subscriber.next(grouped);\n                    if (duration) {\n                        var durationSubscriber_1 = createOperatorSubscriber(group_1, function () {\n                            group_1.complete();\n                            durationSubscriber_1 === null || durationSubscriber_1 === void 0 ? void 0 : durationSubscriber_1.unsubscribe();\n                        }, undefined, undefined, function () { return groups.delete(key_1); });\n                        groupBySourceSubscriber.add(innerFrom(duration(grouped)).subscribe(durationSubscriber_1));\n                    }\n                }\n                group_1.next(element ? element(value) : value);\n            }\n            catch (err) {\n                handleError(err);\n            }\n        }, function () { return notify(function (consumer) { return consumer.complete(); }); }, handleError, function () { return groups.clear(); }, function () {\n            teardownAttempted = true;\n            return activeGroups === 0;\n        });\n        source.subscribe(groupBySourceSubscriber);\n        function createGroupedObservable(key, groupSubject) {\n            var result = new Observable(function (groupSubscriber) {\n                activeGroups++;\n                var innerSub = groupSubject.subscribe(groupSubscriber);\n                return function () {\n                    innerSub.unsubscribe();\n                    --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();\n                };\n            });\n            result.key = key;\n            return result;\n        }\n    });\n}\n//# sourceMappingURL=groupBy.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nexport function ignoreElements() {\n    return operate(function (source, subscriber) {\n        source.subscribe(createOperatorSubscriber(subscriber, noop));\n    });\n}\n//# sourceMappingURL=ignoreElements.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function isEmpty() {\n    return operate(function (source, subscriber) {\n        source.subscribe(createOperatorSubscriber(subscriber, function () {\n            subscriber.next(false);\n            subscriber.complete();\n        }, function () {\n            subscriber.next(true);\n            subscriber.complete();\n        }));\n    });\n}\n//# sourceMappingURL=isEmpty.js.map","import { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { mergeMap } from './mergeMap';\nimport { toArray } from './toArray';\nexport function joinAllInternals(joinFn, project) {\n    return pipe(toArray(), mergeMap(function (sources) { return joinFn(sources); }), project ? mapOneOrManyArgs(project) : identity);\n}\n//# sourceMappingURL=joinAllInternals.js.map","import { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\nexport function last(predicate, defaultValue) {\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) {\n        return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, takeLast(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); }));\n    };\n}\n//# sourceMappingURL=last.js.map","import { Notification } from '../Notification';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function materialize() {\n    return operate(function (source, subscriber) {\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(Notification.createNext(value));\n        }, function () {\n            subscriber.next(Notification.createComplete());\n            subscriber.complete();\n        }, function (err) {\n            subscriber.next(Notification.createError(err));\n            subscriber.complete();\n        }));\n    });\n}\n//# sourceMappingURL=materialize.js.map","import { reduce } from './reduce';\nimport { isFunction } from '../util/isFunction';\nexport function max(comparer) {\n    return reduce(isFunction(comparer) ? function (x, y) { return (comparer(x, y) > 0 ? x : y); } : function (x, y) { return (x > y ? x : y); });\n}\n//# sourceMappingURL=max.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from '../observable/from';\nexport function merge() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(args);\n    var concurrent = popNumber(args, Infinity);\n    args = argsOrArgArray(args);\n    return operate(function (source, subscriber) {\n        mergeAll(concurrent)(from(__spreadArray([source], __read(args)), scheduler)).subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=merge.js.map","import { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\nexport function mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Infinity; }\n    if (isFunction(resultSelector)) {\n        return mergeMap(function () { return innerObservable; }, resultSelector, concurrent);\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return mergeMap(function () { return innerObservable; }, concurrent);\n}\n//# sourceMappingURL=mergeMapTo.js.map","import { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nexport function mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) { concurrent = Infinity; }\n    return operate(function (source, subscriber) {\n        var state = seed;\n        return mergeInternals(source, subscriber, function (value, index) { return accumulator(state, value, index); }, concurrent, function (value) {\n            state = value;\n        }, false, undefined, function () { return (state = null); });\n    });\n}\n//# sourceMappingURL=mergeScan.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { merge } from './merge';\nexport function mergeWith() {\n    var otherSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        otherSources[_i] = arguments[_i];\n    }\n    return merge.apply(void 0, __spreadArray([], __read(otherSources)));\n}\n//# sourceMappingURL=mergeWith.js.map","import { reduce } from './reduce';\nimport { isFunction } from '../util/isFunction';\nexport function min(comparer) {\n    return reduce(isFunction(comparer) ? function (x, y) { return (comparer(x, y) < 0 ? x : y); } : function (x, y) { return (x < y ? x : y); });\n}\n//# sourceMappingURL=min.js.map","import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\nexport function multicast(subjectOrSubjectFactory, selector) {\n    var subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : function () { return subjectOrSubjectFactory; };\n    if (isFunction(selector)) {\n        return connect(selector, {\n            connector: subjectFactory,\n        });\n    }\n    return function (source) { return new ConnectableObservable(source, subjectFactory); };\n}\n//# sourceMappingURL=multicast.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { onErrorResumeNext as oERNCreate } from '../observable/onErrorResumeNext';\nexport function onErrorResumeNextWith() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    var nextSources = argsOrArgArray(sources);\n    return function (source) { return oERNCreate.apply(void 0, __spreadArray([source], __read(nextSources))); };\n}\nexport var onErrorResumeNext = onErrorResumeNextWith;\n//# sourceMappingURL=onErrorResumeNextWith.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function pairwise() {\n    return operate(function (source, subscriber) {\n        var prev;\n        var hasPrev = false;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var p = prev;\n            prev = value;\n            hasPrev && subscriber.next([p, value]);\n            hasPrev = true;\n        }));\n    });\n}\n//# sourceMappingURL=pairwise.js.map","import { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { connect } from './connect';\nexport function publish(selector) {\n    return selector ? function (source) { return connect(selector)(source); } : function (source) { return multicast(new Subject())(source); };\n}\n//# sourceMappingURL=publish.js.map","import { BehaviorSubject } from '../BehaviorSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nexport function publishBehavior(initialValue) {\n    return function (source) {\n        var subject = new BehaviorSubject(initialValue);\n        return new ConnectableObservable(source, function () { return subject; });\n    };\n}\n//# sourceMappingURL=publishBehavior.js.map","import { AsyncSubject } from '../AsyncSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nexport function publishLast() {\n    return function (source) {\n        var subject = new AsyncSubject();\n        return new ConnectableObservable(source, function () { return subject; });\n    };\n}\n//# sourceMappingURL=publishLast.js.map","import { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { isFunction } from '../util/isFunction';\nexport function publishReplay(bufferSize, windowTime, selectorOrScheduler, timestampProvider) {\n    if (selectorOrScheduler && !isFunction(selectorOrScheduler)) {\n        timestampProvider = selectorOrScheduler;\n    }\n    var selector = isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\n    return function (source) { return multicast(new ReplaySubject(bufferSize, windowTime, timestampProvider), selector)(source); };\n}\n//# sourceMappingURL=publishReplay.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { raceInit } from '../observable/race';\nimport { operate } from '../util/lift';\nimport { identity } from '../util/identity';\nexport function raceWith() {\n    var otherSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        otherSources[_i] = arguments[_i];\n    }\n    return !otherSources.length\n        ? identity\n        : operate(function (source, subscriber) {\n            raceInit(__spreadArray([source], __read(otherSources)))(subscriber);\n        });\n}\n//# sourceMappingURL=raceWith.js.map","import { scanInternals } from './scanInternals';\nimport { operate } from '../util/lift';\nexport function reduce(accumulator, seed) {\n    return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n//# sourceMappingURL=reduce.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function refCount() {\n    return operate(function (source, subscriber) {\n        var connection = null;\n        source._refCount++;\n        var refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, function () {\n            if (!source || source._refCount <= 0 || 0 < --source._refCount) {\n                connection = null;\n                return;\n            }\n            var sharedConnection = source._connection;\n            var conn = connection;\n            connection = null;\n            if (sharedConnection && (!conn || sharedConnection === conn)) {\n                sharedConnection.unsubscribe();\n            }\n            subscriber.unsubscribe();\n        });\n        source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            connection = source.connect();\n        }\n    });\n}\n//# sourceMappingURL=refCount.js.map","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { timer } from '../observable/timer';\nexport function repeat(countOrConfig) {\n    var _a;\n    var count = Infinity;\n    var delay;\n    if (countOrConfig != null) {\n        if (typeof countOrConfig === 'object') {\n            (_a = countOrConfig.count, count = _a === void 0 ? Infinity : _a, delay = countOrConfig.delay);\n        }\n        else {\n            count = countOrConfig;\n        }\n    }\n    return count <= 0\n        ? function () { return EMPTY; }\n        : operate(function (source, subscriber) {\n            var soFar = 0;\n            var sourceSub;\n            var resubscribe = function () {\n                sourceSub === null || sourceSub === void 0 ? void 0 : sourceSub.unsubscribe();\n                sourceSub = null;\n                if (delay != null) {\n                    var notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(soFar));\n                    var notifierSubscriber_1 = createOperatorSubscriber(subscriber, function () {\n                        notifierSubscriber_1.unsubscribe();\n                        subscribeToSource();\n                    });\n                    notifier.subscribe(notifierSubscriber_1);\n                }\n                else {\n                    subscribeToSource();\n                }\n            };\n            var subscribeToSource = function () {\n                var syncUnsub = false;\n                sourceSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, function () {\n                    if (++soFar < count) {\n                        if (sourceSub) {\n                            resubscribe();\n                        }\n                        else {\n                            syncUnsub = true;\n                        }\n                    }\n                    else {\n                        subscriber.complete();\n                    }\n                }));\n                if (syncUnsub) {\n                    resubscribe();\n                }\n            };\n            subscribeToSource();\n        });\n}\n//# sourceMappingURL=repeat.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function repeatWhen(notifier) {\n    return operate(function (source, subscriber) {\n        var innerSub;\n        var syncResub = false;\n        var completions$;\n        var isNotifierComplete = false;\n        var isMainComplete = false;\n        var checkComplete = function () { return isMainComplete && isNotifierComplete && (subscriber.complete(), true); };\n        var getCompletionSubject = function () {\n            if (!completions$) {\n                completions$ = new Subject();\n                innerFrom(notifier(completions$)).subscribe(createOperatorSubscriber(subscriber, function () {\n                    if (innerSub) {\n                        subscribeForRepeatWhen();\n                    }\n                    else {\n                        syncResub = true;\n                    }\n                }, function () {\n                    isNotifierComplete = true;\n                    checkComplete();\n                }));\n            }\n            return completions$;\n        };\n        var subscribeForRepeatWhen = function () {\n            isMainComplete = false;\n            innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, function () {\n                isMainComplete = true;\n                !checkComplete() && getCompletionSubject().next();\n            }));\n            if (syncResub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                syncResub = false;\n                subscribeForRepeatWhen();\n            }\n        };\n        subscribeForRepeatWhen();\n    });\n}\n//# sourceMappingURL=repeatWhen.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nimport { timer } from '../observable/timer';\nimport { innerFrom } from '../observable/innerFrom';\nexport function retry(configOrCount) {\n    if (configOrCount === void 0) { configOrCount = Infinity; }\n    var config;\n    if (configOrCount && typeof configOrCount === 'object') {\n        config = configOrCount;\n    }\n    else {\n        config = {\n            count: configOrCount,\n        };\n    }\n    var _a = config.count, count = _a === void 0 ? Infinity : _a, delay = config.delay, _b = config.resetOnSuccess, resetOnSuccess = _b === void 0 ? false : _b;\n    return count <= 0\n        ? identity\n        : operate(function (source, subscriber) {\n            var soFar = 0;\n            var innerSub;\n            var subscribeForRetry = function () {\n                var syncUnsub = false;\n                innerSub = source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n                    if (resetOnSuccess) {\n                        soFar = 0;\n                    }\n                    subscriber.next(value);\n                }, undefined, function (err) {\n                    if (soFar++ < count) {\n                        var resub_1 = function () {\n                            if (innerSub) {\n                                innerSub.unsubscribe();\n                                innerSub = null;\n                                subscribeForRetry();\n                            }\n                            else {\n                                syncUnsub = true;\n                            }\n                        };\n                        if (delay != null) {\n                            var notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\n                            var notifierSubscriber_1 = createOperatorSubscriber(subscriber, function () {\n                                notifierSubscriber_1.unsubscribe();\n                                resub_1();\n                            }, function () {\n                                subscriber.complete();\n                            });\n                            notifier.subscribe(notifierSubscriber_1);\n                        }\n                        else {\n                            resub_1();\n                        }\n                    }\n                    else {\n                        subscriber.error(err);\n                    }\n                }));\n                if (syncUnsub) {\n                    innerSub.unsubscribe();\n                    innerSub = null;\n                    subscribeForRetry();\n                }\n            };\n            subscribeForRetry();\n        });\n}\n//# sourceMappingURL=retry.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function retryWhen(notifier) {\n    return operate(function (source, subscriber) {\n        var innerSub;\n        var syncResub = false;\n        var errors$;\n        var subscribeForRetryWhen = function () {\n            innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, undefined, function (err) {\n                if (!errors$) {\n                    errors$ = new Subject();\n                    innerFrom(notifier(errors$)).subscribe(createOperatorSubscriber(subscriber, function () {\n                        return innerSub ? subscribeForRetryWhen() : (syncResub = true);\n                    }));\n                }\n                if (errors$) {\n                    errors$.next(err);\n                }\n            }));\n            if (syncResub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                syncResub = false;\n                subscribeForRetryWhen();\n            }\n        };\n        subscribeForRetryWhen();\n    });\n}\n//# sourceMappingURL=retryWhen.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function sample(notifier) {\n    return operate(function (source, subscriber) {\n        var hasValue = false;\n        var lastValue = null;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            hasValue = true;\n            lastValue = value;\n        }));\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, function () {\n            if (hasValue) {\n                hasValue = false;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        }, noop));\n    });\n}\n//# sourceMappingURL=sample.js.map","import { asyncScheduler } from '../scheduler/async';\nimport { sample } from './sample';\nimport { interval } from '../observable/interval';\nexport function sampleTime(period, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return sample(interval(period, scheduler));\n}\n//# sourceMappingURL=sampleTime.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function sequenceEqual(compareTo, comparator) {\n    if (comparator === void 0) { comparator = function (a, b) { return a === b; }; }\n    return operate(function (source, subscriber) {\n        var aState = createState();\n        var bState = createState();\n        var emit = function (isEqual) {\n            subscriber.next(isEqual);\n            subscriber.complete();\n        };\n        var createSubscriber = function (selfState, otherState) {\n            var sequenceEqualSubscriber = createOperatorSubscriber(subscriber, function (a) {\n                var buffer = otherState.buffer, complete = otherState.complete;\n                if (buffer.length === 0) {\n                    complete ? emit(false) : selfState.buffer.push(a);\n                }\n                else {\n                    !comparator(a, buffer.shift()) && emit(false);\n                }\n            }, function () {\n                selfState.complete = true;\n                var complete = otherState.complete, buffer = otherState.buffer;\n                complete && emit(buffer.length === 0);\n                sequenceEqualSubscriber === null || sequenceEqualSubscriber === void 0 ? void 0 : sequenceEqualSubscriber.unsubscribe();\n            });\n            return sequenceEqualSubscriber;\n        };\n        source.subscribe(createSubscriber(aState, bState));\n        innerFrom(compareTo).subscribe(createSubscriber(bState, aState));\n    });\n}\nfunction createState() {\n    return {\n        buffer: [],\n        complete: false,\n    };\n}\n//# sourceMappingURL=sequenceEqual.js.map","import { EmptyError } from '../util/EmptyError';\nimport { SequenceError } from '../util/SequenceError';\nimport { NotFoundError } from '../util/NotFoundError';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function single(predicate) {\n    return operate(function (source, subscriber) {\n        var hasValue = false;\n        var singleValue;\n        var seenValue = false;\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            seenValue = true;\n            if (!predicate || predicate(value, index++, source)) {\n                hasValue && subscriber.error(new SequenceError('Too many matching values'));\n                hasValue = true;\n                singleValue = value;\n            }\n        }, function () {\n            if (hasValue) {\n                subscriber.next(singleValue);\n                subscriber.complete();\n            }\n            else {\n                subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n            }\n        }));\n    });\n}\n//# sourceMappingURL=single.js.map","import { filter } from './filter';\nexport function skip(count) {\n    return filter(function (_, index) { return count <= index; });\n}\n//# sourceMappingURL=skip.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function skipLast(skipCount) {\n    return skipCount <= 0\n        ?\n            identity\n        : operate(function (source, subscriber) {\n            var ring = new Array(skipCount);\n            var seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n                var valueIndex = seen++;\n                if (valueIndex < skipCount) {\n                    ring[valueIndex] = value;\n                }\n                else {\n                    var index = valueIndex % skipCount;\n                    var oldValue = ring[index];\n                    ring[index] = value;\n                    subscriber.next(oldValue);\n                }\n            }));\n            return function () {\n                ring = null;\n            };\n        });\n}\n//# sourceMappingURL=skipLast.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function skipWhile(predicate) {\n    return operate(function (source, subscriber) {\n        var taking = false;\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return (taking || (taking = !predicate(value, index++))) && subscriber.next(value); }));\n    });\n}\n//# sourceMappingURL=skipWhile.js.map","import { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\nexport function switchAll() {\n    return switchMap(identity);\n}\n//# sourceMappingURL=switchAll.js.map","import { switchMap } from './switchMap';\nimport { isFunction } from '../util/isFunction';\nexport function switchMapTo(innerObservable, resultSelector) {\n    return isFunction(resultSelector) ? switchMap(function () { return innerObservable; }, resultSelector) : switchMap(function () { return innerObservable; });\n}\n//# sourceMappingURL=switchMapTo.js.map","import { switchMap } from './switchMap';\nimport { operate } from '../util/lift';\nexport function switchScan(accumulator, seed) {\n    return operate(function (source, subscriber) {\n        var state = seed;\n        switchMap(function (value, index) { return accumulator(state, value, index); }, function (_, innerValue) { return ((state = innerValue), innerValue); })(source).subscribe(subscriber);\n        return function () {\n            state = null;\n        };\n    });\n}\n//# sourceMappingURL=switchScan.js.map","import { __values } from \"tslib\";\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function takeLast(count) {\n    return count <= 0\n        ? function () { return EMPTY; }\n        : operate(function (source, subscriber) {\n            var buffer = [];\n            source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n                buffer.push(value);\n                count < buffer.length && buffer.shift();\n            }, function () {\n                var e_1, _a;\n                try {\n                    for (var buffer_1 = __values(buffer), buffer_1_1 = buffer_1.next(); !buffer_1_1.done; buffer_1_1 = buffer_1.next()) {\n                        var value = buffer_1_1.value;\n                        subscriber.next(value);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (buffer_1_1 && !buffer_1_1.done && (_a = buffer_1.return)) _a.call(buffer_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                subscriber.complete();\n            }, undefined, function () {\n                buffer = null;\n            }));\n        });\n}\n//# sourceMappingURL=takeLast.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function takeWhile(predicate, inclusive) {\n    if (inclusive === void 0) { inclusive = false; }\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var result = predicate(value, index++);\n            (result || inclusive) && subscriber.next(value);\n            !result && subscriber.complete();\n        }));\n    });\n}\n//# sourceMappingURL=takeWhile.js.map","import { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nexport function tap(observerOrNext, error, complete) {\n    var tapObserver = isFunction(observerOrNext) || error || complete\n        ?\n            { next: observerOrNext, error: error, complete: complete }\n        : observerOrNext;\n    return tapObserver\n        ? operate(function (source, subscriber) {\n            var _a;\n            (_a = tapObserver.subscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n            var isUnsub = true;\n            source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n                var _a;\n                (_a = tapObserver.next) === null || _a === void 0 ? void 0 : _a.call(tapObserver, value);\n                subscriber.next(value);\n            }, function () {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.complete) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                subscriber.complete();\n            }, function (err) {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.error) === null || _a === void 0 ? void 0 : _a.call(tapObserver, err);\n                subscriber.error(err);\n            }, function () {\n                var _a, _b;\n                if (isUnsub) {\n                    (_a = tapObserver.unsubscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                }\n                (_b = tapObserver.finalize) === null || _b === void 0 ? void 0 : _b.call(tapObserver);\n            }));\n        })\n        :\n            identity;\n}\n//# sourceMappingURL=tap.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function throttle(durationSelector, config) {\n    return operate(function (source, subscriber) {\n        var _a = config !== null && config !== void 0 ? config : {}, _b = _a.leading, leading = _b === void 0 ? true : _b, _c = _a.trailing, trailing = _c === void 0 ? false : _c;\n        var hasValue = false;\n        var sendValue = null;\n        var throttled = null;\n        var isComplete = false;\n        var endThrottling = function () {\n            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n            throttled = null;\n            if (trailing) {\n                send();\n                isComplete && subscriber.complete();\n            }\n        };\n        var cleanupThrottling = function () {\n            throttled = null;\n            isComplete && subscriber.complete();\n        };\n        var startThrottle = function (value) {\n            return (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n        };\n        var send = function () {\n            if (hasValue) {\n                hasValue = false;\n                var value = sendValue;\n                sendValue = null;\n                subscriber.next(value);\n                !isComplete && startThrottle(value);\n            }\n        };\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            hasValue = true;\n            sendValue = value;\n            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        }, function () {\n            isComplete = true;\n            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }));\n    });\n}\n//# sourceMappingURL=throttle.js.map","import { asyncScheduler } from '../scheduler/async';\nimport { throttle } from './throttle';\nimport { timer } from '../observable/timer';\nexport function throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    var duration$ = timer(duration, scheduler);\n    return throttle(function () { return duration$; }, config);\n}\n//# sourceMappingURL=throttleTime.js.map","import { EmptyError } from '../util/EmptyError';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function throwIfEmpty(errorFactory) {\n    if (errorFactory === void 0) { errorFactory = defaultErrorFactory; }\n    return operate(function (source, subscriber) {\n        var hasValue = false;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            hasValue = true;\n            subscriber.next(value);\n        }, function () { return (hasValue ? subscriber.complete() : subscriber.error(errorFactory())); }));\n    });\n}\nfunction defaultErrorFactory() {\n    return new EmptyError();\n}\n//# sourceMappingURL=throwIfEmpty.js.map","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function timeInterval(scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return operate(function (source, subscriber) {\n        var last = scheduler.now();\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var now = scheduler.now();\n            var interval = now - last;\n            last = now;\n            subscriber.next(new TimeInterval(value, interval));\n        }));\n    });\n}\nvar TimeInterval = (function () {\n    function TimeInterval(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n    return TimeInterval;\n}());\nexport { TimeInterval };\n//# sourceMappingURL=timeInterval.js.map","import { async } from '../scheduler/async';\nimport { isValidDate } from '../util/isDate';\nimport { timeout } from './timeout';\nexport function timeoutWith(due, withObservable, scheduler) {\n    var first;\n    var each;\n    var _with;\n    scheduler = scheduler !== null && scheduler !== void 0 ? scheduler : async;\n    if (isValidDate(due)) {\n        first = due;\n    }\n    else if (typeof due === 'number') {\n        each = due;\n    }\n    if (withObservable) {\n        _with = function () { return withObservable; };\n    }\n    else {\n        throw new TypeError('No observable provided to switch to');\n    }\n    if (first == null && each == null) {\n        throw new TypeError('No timeout provided.');\n    }\n    return timeout({\n        first: first,\n        each: each,\n        scheduler: scheduler,\n        with: _with,\n    });\n}\n//# sourceMappingURL=timeoutWith.js.map","import { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\nimport { map } from './map';\nexport function timestamp(timestampProvider) {\n    if (timestampProvider === void 0) { timestampProvider = dateTimestampProvider; }\n    return map(function (value) { return ({ value: value, timestamp: timestampProvider.now() }); });\n}\n//# sourceMappingURL=timestamp.js.map","import { reduce } from './reduce';\nimport { operate } from '../util/lift';\nvar arrReducer = function (arr, value) { return (arr.push(value), arr); };\nexport function toArray() {\n    return operate(function (source, subscriber) {\n        reduce(arrReducer, [])(source).subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=toArray.js.map","import { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\nexport function window(windowBoundaries) {\n    return operate(function (source, subscriber) {\n        var windowSubject = new Subject();\n        subscriber.next(windowSubject.asObservable());\n        var errorHandler = function (err) {\n            windowSubject.error(err);\n            subscriber.error(err);\n        };\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return windowSubject === null || windowSubject === void 0 ? void 0 : windowSubject.next(value); }, function () {\n            windowSubject.complete();\n            subscriber.complete();\n        }, errorHandler));\n        innerFrom(windowBoundaries).subscribe(createOperatorSubscriber(subscriber, function () {\n            windowSubject.complete();\n            subscriber.next((windowSubject = new Subject()));\n        }, noop, errorHandler));\n        return function () {\n            windowSubject === null || windowSubject === void 0 ? void 0 : windowSubject.unsubscribe();\n            windowSubject = null;\n        };\n    });\n}\n//# sourceMappingURL=window.js.map","import { __values } from \"tslib\";\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) { startWindowEvery = 0; }\n    var startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;\n    return operate(function (source, subscriber) {\n        var windows = [new Subject()];\n        var starts = [];\n        var count = 0;\n        subscriber.next(windows[0].asObservable());\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var e_1, _a;\n            try {\n                for (var windows_1 = __values(windows), windows_1_1 = windows_1.next(); !windows_1_1.done; windows_1_1 = windows_1.next()) {\n                    var window_1 = windows_1_1.value;\n                    window_1.next(value);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (windows_1_1 && !windows_1_1.done && (_a = windows_1.return)) _a.call(windows_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            var c = count - windowSize + 1;\n            if (c >= 0 && c % startEvery === 0) {\n                windows.shift().complete();\n            }\n            if (++count % startEvery === 0) {\n                var window_2 = new Subject();\n                windows.push(window_2);\n                subscriber.next(window_2.asObservable());\n            }\n        }, function () {\n            while (windows.length > 0) {\n                windows.shift().complete();\n            }\n            subscriber.complete();\n        }, function (err) {\n            while (windows.length > 0) {\n                windows.shift().error(err);\n            }\n            subscriber.error(err);\n        }, function () {\n            starts = null;\n            windows = null;\n        }));\n    });\n}\n//# sourceMappingURL=windowCount.js.map","import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function windowTime(windowTimeSpan) {\n    var _a, _b;\n    var otherArgs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherArgs[_i - 1] = arguments[_i];\n    }\n    var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n    var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n    var maxWindowSize = otherArgs[1] || Infinity;\n    return operate(function (source, subscriber) {\n        var windowRecords = [];\n        var restartOnClose = false;\n        var closeWindow = function (record) {\n            var window = record.window, subs = record.subs;\n            window.complete();\n            subs.unsubscribe();\n            arrRemove(windowRecords, record);\n            restartOnClose && startWindow();\n        };\n        var startWindow = function () {\n            if (windowRecords) {\n                var subs = new Subscription();\n                subscriber.add(subs);\n                var window_1 = new Subject();\n                var record_1 = {\n                    window: window_1,\n                    subs: subs,\n                    seen: 0,\n                };\n                windowRecords.push(record_1);\n                subscriber.next(window_1.asObservable());\n                executeSchedule(subs, scheduler, function () { return closeWindow(record_1); }, windowTimeSpan);\n            }\n        };\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n        }\n        else {\n            restartOnClose = true;\n        }\n        startWindow();\n        var loop = function (cb) { return windowRecords.slice().forEach(cb); };\n        var terminate = function (cb) {\n            loop(function (_a) {\n                var window = _a.window;\n                return cb(window);\n            });\n            cb(subscriber);\n            subscriber.unsubscribe();\n        };\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            loop(function (record) {\n                record.window.next(value);\n                maxWindowSize <= ++record.seen && closeWindow(record);\n            });\n        }, function () { return terminate(function (consumer) { return consumer.complete(); }); }, function (err) { return terminate(function (consumer) { return consumer.error(err); }); }));\n        return function () {\n            windowRecords = null;\n        };\n    });\n}\n//# sourceMappingURL=windowTime.js.map","import { __values } from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\nexport function windowToggle(openings, closingSelector) {\n    return operate(function (source, subscriber) {\n        var windows = [];\n        var handleError = function (err) {\n            while (0 < windows.length) {\n                windows.shift().error(err);\n            }\n            subscriber.error(err);\n        };\n        innerFrom(openings).subscribe(createOperatorSubscriber(subscriber, function (openValue) {\n            var window = new Subject();\n            windows.push(window);\n            var closingSubscription = new Subscription();\n            var closeWindow = function () {\n                arrRemove(windows, window);\n                window.complete();\n                closingSubscription.unsubscribe();\n            };\n            var closingNotifier;\n            try {\n                closingNotifier = innerFrom(closingSelector(openValue));\n            }\n            catch (err) {\n                handleError(err);\n                return;\n            }\n            subscriber.next(window.asObservable());\n            closingSubscription.add(closingNotifier.subscribe(createOperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n        }, noop));\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var e_1, _a;\n            var windowsCopy = windows.slice();\n            try {\n                for (var windowsCopy_1 = __values(windowsCopy), windowsCopy_1_1 = windowsCopy_1.next(); !windowsCopy_1_1.done; windowsCopy_1_1 = windowsCopy_1.next()) {\n                    var window_1 = windowsCopy_1_1.value;\n                    window_1.next(value);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (windowsCopy_1_1 && !windowsCopy_1_1.done && (_a = windowsCopy_1.return)) _a.call(windowsCopy_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }, function () {\n            while (0 < windows.length) {\n                windows.shift().complete();\n            }\n            subscriber.complete();\n        }, handleError, function () {\n            while (0 < windows.length) {\n                windows.shift().unsubscribe();\n            }\n        }));\n    });\n}\n//# sourceMappingURL=windowToggle.js.map","import { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function windowWhen(closingSelector) {\n    return operate(function (source, subscriber) {\n        var window;\n        var closingSubscriber;\n        var handleError = function (err) {\n            window.error(err);\n            subscriber.error(err);\n        };\n        var openWindow = function () {\n            closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();\n            window === null || window === void 0 ? void 0 : window.complete();\n            window = new Subject();\n            subscriber.next(window.asObservable());\n            var closingNotifier;\n            try {\n                closingNotifier = innerFrom(closingSelector());\n            }\n            catch (err) {\n                handleError(err);\n                return;\n            }\n            closingNotifier.subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openWindow, openWindow, handleError)));\n        };\n        openWindow();\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return window.next(value); }, function () {\n            window.complete();\n            subscriber.complete();\n        }, handleError, function () {\n            closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();\n            window = null;\n        }));\n    });\n}\n//# sourceMappingURL=windowWhen.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { zip as zipStatic } from '../observable/zip';\nimport { operate } from '../util/lift';\nexport function zip() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    return operate(function (source, subscriber) {\n        zipStatic.apply(void 0, __spreadArray([source], __read(sources))).subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=zip.js.map","import { zip } from '../observable/zip';\nimport { joinAllInternals } from './joinAllInternals';\nexport function zipAll(project) {\n    return joinAllInternals(zip, project);\n}\n//# sourceMappingURL=zipAll.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { zip } from './zip';\nexport function zipWith() {\n    var otherInputs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        otherInputs[_i] = arguments[_i];\n    }\n    return zip.apply(void 0, __spreadArray([], __read(otherInputs)));\n}\n//# sourceMappingURL=zipWith.js.map","import { createErrorClass } from './createErrorClass';\nexport var ArgumentOutOfRangeError = createErrorClass(function (_super) {\n    return function ArgumentOutOfRangeErrorImpl() {\n        _super(this);\n        this.name = 'ArgumentOutOfRangeError';\n        this.message = 'argument out of range';\n    };\n});\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map","import { createErrorClass } from './createErrorClass';\nexport var NotFoundError = createErrorClass(function (_super) {\n    return function NotFoundErrorImpl(message) {\n        _super(this);\n        this.name = 'NotFoundError';\n        this.message = message;\n    };\n});\n//# sourceMappingURL=NotFoundError.js.map","import { createErrorClass } from './createErrorClass';\nexport var SequenceError = createErrorClass(function (_super) {\n    return function SequenceErrorImpl(message) {\n        _super(this);\n        this.name = 'SequenceError';\n        this.message = message;\n    };\n});\n//# sourceMappingURL=SequenceError.js.map","var isArray = Array.isArray;\nvar getPrototypeOf = Object.getPrototypeOf, objectProto = Object.prototype, getKeys = Object.keys;\nexport function argsArgArrayOrObject(args) {\n    if (args.length === 1) {\n        var first_1 = args[0];\n        if (isArray(first_1)) {\n            return { args: first_1, keys: null };\n        }\n        if (isPOJO(first_1)) {\n            var keys = getKeys(first_1);\n            return {\n                args: keys.map(function (key) { return first_1[key]; }),\n                keys: keys,\n            };\n        }\n    }\n    return { args: args, keys: null };\n}\nfunction isPOJO(obj) {\n    return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n//# sourceMappingURL=argsArgArrayOrObject.js.map","var isArray = Array.isArray;\nexport function argsOrArgArray(args) {\n    return args.length === 1 && isArray(args[0]) ? args[0] : args;\n}\n//# sourceMappingURL=argsOrArgArray.js.map","export function createObject(keys, values) {\n    return keys.reduce(function (result, key, i) { return ((result[key] = values[i]), result); }, {});\n}\n//# sourceMappingURL=createObject.js.map","export function not(pred, thisArg) {\n    return function (value, index) { return !pred.call(thisArg, value, index); };\n}\n//# sourceMappingURL=not.js.map"],"names":[],"sourceRoot":""}